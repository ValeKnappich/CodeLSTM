[
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/component/weapon/shared_sword_core_quest.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"craft_weapon_ingredients_n\",\"sword_core_quest\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/component/weapon/shared_sword_core_quest.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17001
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .=LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/container/drum/shared_large_plain_crate_s02.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"container_name\",\"large_plain_crate\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/container/drum/shared_large_plain_crate_s02.py",
            "fix_location": 45,
            "fix_type": "delete",
            "id": 17002
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =or -LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/container/jar/shared_jar_spice_s03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"container_name\",\"jar_spice\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/container/jar/shared_jar_spice_s03.py",
            "fix_location": 28,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17003
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =\n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/crafting/shared_missing_schematic_substitute.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"\",\"\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/crafting/shared_missing_schematic_substitute.py",
            "fix_location": 72,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17004
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/datapad/shared_droid_datapad_5.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"datapad\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/datapad/shared_droid_datapad_5.py",
            "fix_location": 73,
            "fix_type": "delete",
            "id": 17005
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )in \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/city_deed/shared_garden_corellia_med_02_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"garden_corellia_med_02_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/city_deed/shared_garden_corellia_med_02_deed.py",
            "fix_location": 122,
            "fix_type": "delete",
            "id": 17006
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n    is "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/city_deed/shared_garden_naboo_sml_01_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"garden_naboo_sml_01_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/city_deed/shared_garden_naboo_sml_01_deed.py",
            "fix_location": 49,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17007
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT if ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/city_deed/shared_theater_tatooine_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"tatooine_theater_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/city_deed/shared_theater_tatooine_deed.py",
            "fix_location": 57,
            "fix_type": "delete",
            "id": 17008
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID with .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/event_perk/shared_fed_dub_stage_theater_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"event_perk\",\"fed_dub_stage_theater_deed_name\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/event_perk/shared_fed_dub_stage_theater_deed.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17009
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):global \n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/event_perk/shared_pavillion_1_static_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"event_perk\",\"pavillion_1_static_deed_name\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/event_perk/shared_pavillion_1_static_deed.py",
            "fix_location": 77,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17010
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n    ==#COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/event_perk/shared_tatooine_flag_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"event_perk\",\"tatooine_flag_deed_name\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/event_perk/shared_tatooine_flag_deed.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17011
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/faction_perk/minefield/shared_field_1x1_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"minefield_1x1\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/faction_perk/minefield/shared_field_1x1_deed.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17012
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/harvester_deed/shared_harvester_gas_deed_heavy.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"gas_harvester_heavy_deed_name\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/harvester_deed/shared_harvester_gas_deed_heavy.py",
            "fix_location": 49,
            "fix_type": "delete",
            "id": 17013
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT in \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/pet_deed/shared_carrion_spat_deed.py",
            "fix_location": 25,
            "fix_type": "delete",
            "id": 17014
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ):\n    pass \nclass "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/pet_deed/shared_deed_surgical_basic.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"surgical_basic_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/pet_deed/shared_deed_surgical_basic.py",
            "fix_location": 24,
            "fix_type": "delete",
            "id": 17015
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .finally ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/pet_deed/shared_kwi_deed.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17016
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ):break \n    pass \n"
    },
    {
        "code": "\ndef create(kernel):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/pet_deed/shared_woolamander_deed.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17017
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\nID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/deed/player_house_deed/shared_tatooine_house_small_deed.iff\"\n    result.attribute_template_id = 2\n    result.stfName(\"deed\",\"tatooine_house_small_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/deed/player_house_deed/shared_tatooine_house_small_deed.py",
            "fix_location": 92,
            "fix_type": "modify",
            "fix_token": "#COMMENT",
            "id": 17018
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    from \n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/droid/shared_navicomputer_3.iff\"\n    result.attribute_template_id = 3\n    result.stfName(\"space/space_item\",\"navicomputer_3_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/droid/shared_navicomputer_3.py",
            "fix_location": 24,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17019
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .lambda =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/dungeon/corellian_corvette/shared_corvette_search_rebel_assassination_03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"frn_n\",\"frn_desk\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/dungeon/corellian_corvette/shared_corvette_search_rebel_assassination_03.py",
            "fix_location": 32,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17020
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/dungeon/shared_terminal_free_s1.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"terminal_name\",\"terminal_free_s1\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/dungeon/shared_terminal_free_s1.py",
            "fix_location": 79,
            "fix_type": "delete",
            "id": 17021
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    !#COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/event_perk/shared_military_outpost_guard_tower_1.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"building_name\",\"military_guard_tower_1\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/event_perk/shared_military_outpost_guard_tower_1.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17022
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):!\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/firework/shared_firework_two.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"firework_n\",\"firework_two\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/firework/shared_firework_two.py",
            "fix_location": 55,
            "fix_type": "delete",
            "id": 17023
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    finally ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/base/shared_side_dish_base.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"craft_food_ingredients_n\",\"side_dish\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/base/shared_side_dish_base.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17024
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/crafted/shared_dessert_pyollian_cake.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"food_name\",\"pyollian_cake\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/crafted/shared_dessert_pyollian_cake.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17025
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\nimport     ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/crafted/shared_dish_rakririan_burnout_sauce.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"food_name\",\"rakririan_burnout_sauce\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/crafted/shared_dish_rakririan_burnout_sauce.py",
            "fix_location": 66,
            "fix_type": "modify",
            "fix_token": ",",
            "id": 17026
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT return LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/crafted/shared_drink_charde.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"food_name\",\"charde\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/crafted/shared_drink_charde.py",
            "fix_location": 5,
            "fix_type": "delete",
            "id": 17027
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef [ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/creature_bio_effects/shared_bio_kliknik_fortitude_boost.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"food_name\",\"bio_kliknik_fortitude_boost\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/creature_bio_effects/shared_bio_kliknik_fortitude_boost.py",
            "fix_location": 23,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17028
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/food/spice/shared_spice_gunjack.iff\"\n    result.attribute_template_id = 5\n    result.stfName(\"food_name\",\"gunjack\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/food/spice/shared_spice_gunjack.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17029
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/all/shared_frn_all_chair_wooden_s1.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_chair_wooden\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/all/shared_frn_all_chair_wooden_s1.py",
            "fix_location": 9,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17030
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (in ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/all/shared_frn_all_lamp_candlestick_free_s01_lit.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_lamp_candlestick\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/all/shared_frn_all_lamp_candlestick_free_s01_lit.py",
            "fix_location": 62,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17031
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/all/shared_frn_all_lamp_tbl_s03_lit.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_lamp_table\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/all/shared_frn_all_lamp_tbl_s03_lit.py",
            "fix_location": 78,
            "fix_type": "modify",
            "fix_token": "#COMMENT",
            "id": 17032
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    ,\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/all/shared_frn_all_rug_rectangle_large_style_01.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_rug_01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/all/shared_frn_all_rug_rectangle_large_style_01.py",
            "fix_location": 61,
            "fix_type": "delete",
            "id": 17033
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID )(LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/cheap/shared_love_seat_s01.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_love_seat\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/cheap/shared_love_seat_s01.py",
            "fix_location": 122,
            "fix_type": "modify",
            "fix_token": "",
            "id": 17034
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n    with "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/city/shared_streetlamp_med_green_02.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"green_streetlamp_4\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/city/shared_streetlamp_med_green_02.py",
            "fix_location": 67,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17035
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,+)\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/decorative/shared_spear_rack.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"spear_rack\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/decorative/shared_spear_rack.py",
            "fix_location": 54,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17036
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    -.ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/jedi/shared_frn_all_banner_dark.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_all_banner_dark\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/jedi/shared_frn_all_banner_dark.py",
            "fix_location": 44,
            "fix_type": "insert",
            "fix_token": "=",
            "id": 17037
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/modern/shared_dining_table_modern_style_01.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_dining_table\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/modern/shared_dining_table_modern_style_01.py",
            "fix_location": 122,
            "fix_type": "delete",
            "id": 17038
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n    global "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/plain/shared_plain_love_seat_s01.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_love_seat\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/plain/shared_plain_love_seat_s01.py",
            "fix_location": 45,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17039
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =\n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/furniture/technical/shared_cabinet_s01.iff\"\n    result.attribute_template_id = 6\n    result.stfName(\"frn_n\",\"frn_cabinet\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/furniture/technical/shared_cabinet_s01.py",
            "fix_location": 37,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17040
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    class .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/bothan/base/shared_hair_bothan_female_base.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/bothan/base/shared_hair_bothan_female_base.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17041
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID elif =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/bothan/shared_hair_bothan_male_s07.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/bothan/shared_hair_bothan_male_s07.py",
            "fix_location": 67,
            "fix_type": "modify",
            "fix_token": ",",
            "id": 17042
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT def LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/human/shared_hair_human_female_s14.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/human/shared_hair_human_female_s14.py",
            "fix_location": 55,
            "fix_type": "delete",
            "id": 17043
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    /ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/human/shared_hair_human_male_s03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/human/shared_hair_human_male_s03.py",
            "fix_location": 20,
            "fix_type": "delete",
            "id": 17044
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    if ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/human/shared_hair_human_male_s31.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/human/shared_hair_human_male_s31.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17045
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\nID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/rodian/shared_hair_rodian_female_s14.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"frills\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/rodian/shared_hair_rodian_female_s14.py",
            "fix_location": 68,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17046
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,,)\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/singing_mountain_clan/shared_singing_mountain_clan_bangs_s01.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/singing_mountain_clan/shared_singing_mountain_clan_bangs_s01.py",
            "fix_location": 92,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17047
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n    =#COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/sullustan/shared_sul_hair_s13_f.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/sullustan/shared_sul_hair_s13_f.py",
            "fix_location": 45,
            "fix_type": "delete",
            "id": 17048
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =.-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/trandoshan/shared_hair_trandoshan_female_s14.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"ridges\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/trandoshan/shared_hair_trandoshan_female_s14.py",
            "fix_location": 9,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17049
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (for ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/twilek/shared_hair_twilek_male_s03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"lekku\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/twilek/shared_hair_twilek_male_s03.py",
            "fix_location": 40,
            "fix_type": "delete",
            "id": 17050
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID =.ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hair/zabrak/shared_hair_zabrak_female_s17.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"hair_name\",\"hair\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hair/zabrak/shared_hair_zabrak_female_s17.py",
            "fix_location": 32,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17051
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/hopper/crafting_station_hopper/shared_crafting_station_ingredient_hopper_structure_large.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"crafting\",\"hopper_structure_large\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/hopper/crafting_station_hopper/shared_crafting_station_ingredient_hopper_structure_large.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17052
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID ,(ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/instrument/shared_organ_max_rebo.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"obj_n\",\"obj_nalargon\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/instrument/shared_organ_max_rebo.py",
            "fix_location": 59,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17053
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .(LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/item/quest/force_sensitive/shared_fs_craft_puzzle_config_processor.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"quest_item_n\",\"fs_craft_puzzle_config_processor\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/item/quest/force_sensitive/shared_fs_craft_puzzle_config_processor.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17054
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\nID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/jedi/shared_padawan_trials_skeleton.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"frn_n\",\"skeleton_human\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/jedi/shared_padawan_trials_skeleton.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17055
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID yield ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_lair_base_crevice_dark.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"generic_crevice\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_lair_base_crevice_dark.py",
            "fix_location": 45,
            "fix_type": "modify",
            "fix_token": "-",
            "id": 17056
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =else LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_objective_gungan_statue.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"gungan_warrior_statue\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_objective_gungan_statue.py",
            "fix_location": 28,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17057
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =.\n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_brambles_large_fog.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_name\",\"lair_brambles\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_brambles_large_fog.py",
            "fix_location": 62,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17058
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_dead_log_small_fog_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"dead_log\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_dead_log_small_fog_red.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17059
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID :\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_insecthill_small_fog_green.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"insecthill\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_insecthill_small_fog_green.py",
            "fix_location": 27,
            "fix_type": "insert",
            "fix_token": "=",
            "id": 17060
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_mound_large_fog_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"mound\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_mound_large_fog_red.py",
            "fix_location": 72,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17061
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_rock_shelter_large_evil_fire_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"rock_shelter\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_rock_shelter_large_evil_fire_red.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17062
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "nonlocal def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_rocks_small_fog_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"rocks\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_rocks_small_fog_red.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17063
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "or def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/base/shared_poi_all_lair_warren_small_evil_fire_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"warren\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/base/shared_poi_all_lair_warren_small_evil_fire_red.py",
            "fix_location": 41,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17064
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .=-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/bearded_jax/shared_lair_bearded_jax.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"bearded_jax\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/bearded_jax/shared_lair_bearded_jax.py",
            "fix_location": 55,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17065
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/bordok/shared_lair_bordok_mountain.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"bordok_mountain\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/bordok/shared_lair_bordok_mountain.py",
            "fix_location": 40,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17066
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/crowned_rasp/shared_lair_crowned_rasp_mountain.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"crowned_rasp_mountain\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/crowned_rasp/shared_lair_crowned_rasp_mountain.py",
            "fix_location": 50,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17067
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/faa/shared_lair_faa_underwater.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"faa_underwater\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/faa/shared_lair_faa_underwater.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17068
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID from :\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/gnort/shared_lair_gnort_mountain.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"gnort_mountain\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/gnort/shared_lair_gnort_mountain.py",
            "fix_location": 32,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17069
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT lambda ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/horned_krevol/shared_lair_horned_krevol.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"horned_krevol\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/horned_krevol/shared_lair_horned_krevol.py",
            "fix_location": 68,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17070
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,for )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/kimogila/shared_lair_kimogila.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"kimogila\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/kimogila/shared_lair_kimogila.py",
            "fix_location": 58,
            "fix_type": "delete",
            "id": 17071
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID /.ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/lantern_bird/shared_lair_lantern_bird.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"lantern_bird\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/lantern_bird/shared_lair_lantern_bird.py",
            "fix_location": 23,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17072
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID import ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/nuna/shared_lair_nuna_swamp.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"nuna_swamp\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/nuna/shared_lair_nuna_swamp.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17073
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID :\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/rancor/shared_lair_rancor.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"rancor\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/rancor/shared_lair_rancor.py",
            "fix_location": 107,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17074
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n    from return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/scurrier/shared_lair_scurrier_desert.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"scurrier_desert\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/scurrier/shared_lair_scurrier_desert.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17075
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .=LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/stintaril/shared_lair_stintaril_jungle.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"stintaril_jungle\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/stintaril/shared_lair_stintaril_jungle.py",
            "fix_location": 118,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17076
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID try "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/structure/interior/shared_lair_cave_medium_interior_gurk.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"cave_medium_interior_gurk\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/structure/interior/shared_lair_cave_medium_interior_gurk.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17077
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID import ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/vir_vir/shared_lair_vir_vir.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"vir_vir\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/vir_vir/shared_lair_vir_vir.py",
            "fix_location": 41,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17078
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .as =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/lair/zucca_boar/shared_lair_zucca_boar_desert.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"lair_n\",\"zucca_boar_desert\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/lair/zucca_boar/shared_lair_zucca_boar_desert.py",
            "fix_location": 15,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17079
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\nas     ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/collectible/collectible_parts/shared_blue_rug_dye.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"collectible_loot_items_n\",\"blue_rug_dye\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/collectible/collectible_parts/shared_blue_rug_dye.py",
            "fix_location": 62,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17080
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID break LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/collectible/collectible_parts/shared_light_table_glasstop_02.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"collectible_loot_items_n\",\"light_table_glasstop_02\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/collectible/collectible_parts/shared_light_table_glasstop_02.py",
            "fix_location": 41,
            "fix_type": "delete",
            "id": 17081
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .del ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/collectible/collectible_rewards/shared_blue_rug.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"collectible_loot_items_n\",\"blue_rug\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/collectible/collectible_rewards/shared_blue_rug.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17082
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):assert \n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/dungeon/corellian_corvette/shared_neutral_rescue_filler01.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"neutral_rescue_filler01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/dungeon/corellian_corvette/shared_neutral_rescue_filler01.py",
            "fix_location": 108,
            "fix_type": "modify",
            "fix_token": "return",
            "id": 17083
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    (ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/dungeon/geonosian_mad_bunker/shared_relic_gbb_chemical_tab.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"relic_gbb_chemical_tab\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/dungeon/geonosian_mad_bunker/shared_relic_gbb_chemical_tab.py",
            "fix_location": 108,
            "fix_type": "delete",
            "id": 17084
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    async return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/loot_schematic/shared_death_watch_bounty_hunter_bicep_r_schematic.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"craft_item_ingredients_n\",\"armor_bounty_hunter_bicep\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/loot_schematic/shared_death_watch_bounty_hunter_bicep_r_schematic.py",
            "fix_location": 23,
            "fix_type": "delete",
            "id": 17085
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID for .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/loot_schematic/shared_foodcart_schematic.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"craft_item_ingredients_n\",\"foodcart\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/loot_schematic/shared_foodcart_schematic.py",
            "fix_location": 40,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17086
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID pass ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/loot_schematic/shared_technical_console_s01_schematic.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"craft_item_ingredients_n\",\"tech_console_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/loot_schematic/shared_technical_console_s01_schematic.py",
            "fix_location": 45,
            "fix_type": "modify",
            "fix_token": "-",
            "id": 17087
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =else LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/misc/shared_inkpen_engraved_s01.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"inkpen_engraved_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/misc/shared_inkpen_engraved_s01.py",
            "fix_location": 20,
            "fix_type": "delete",
            "id": 17088
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    LIT ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/misc/shared_mt_soup.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"mt_soup\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/misc/shared_mt_soup.py",
            "fix_location": 50,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17089
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT from ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/quest/force_sensitive/sharred_force_crystal.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"quest/force_sensitive/intro\",\"crystal_name\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/quest/force_sensitive/sharred_force_crystal.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17090
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/quest/shared_quest_item_goru_calling_card.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"zicx_calling_card\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/quest/shared_quest_item_goru_calling_card.py",
            "fix_location": 32,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17091
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT :ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/quest/shared_smooth_stone.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"smooth_stone\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/quest/shared_smooth_stone.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17092
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):break \n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/simple_kit/shared_motor_small_red.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_n\",\"motor_small_red\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/simple_kit/shared_motor_small_red.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17093
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID as =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/loot/tool/shared_viewscreen_broken_s2.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"viewscreen_broken\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/loot/tool/shared_viewscreen_broken_s2.py",
            "fix_location": 108,
            "fix_type": "delete",
            "id": 17094
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    def return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_disease_action_a.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medic_disease_action_a\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_disease_action_a.py",
            "fix_location": 20,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17095
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    and .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_disease_area_willpower_c.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medic_disease_area_willpower_c\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_disease_area_willpower_c.py",
            "fix_location": 23,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17096
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID if ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_enhance_action_b.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medpack_enhance_action_b\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_enhance_action_b.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17097
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID :\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_enhance_strength_d.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medpack_enhance_strength_d\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_enhance_strength_d.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17098
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ncontinue def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_poison_mind_c.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medic_poison_mind_c\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_poison_mind_c.py",
            "fix_location": 20,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17099
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/crafted/shared_medpack_wound_stamina_e.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medpack_wound_stamina_e\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/crafted/shared_medpack_wound_stamina_e.py",
            "fix_location": 66,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17100
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/pet/shared_pet_vitapack_c.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"pet_vitapack_c\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/pet/shared_pet_vitapack_c.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17101
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .try (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/medicine/shared_medpack_sm_s1.iff\"\n    result.attribute_template_id = 7\n    result.stfName(\"medicine_name\",\"medpack_sm_s1\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/medicine/shared_medpack_sm_s1.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17102
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_binna_jode_q2_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_tato_n\",\"binna_jode_q2_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_binna_jode_q2_needed.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17103
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID else :\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_charal_q1_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_endr_n\",\"charal_q1_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_charal_q1_needed.py",
            "fix_location": 106,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17104
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n    lambda \n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_figrindan_q2_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_tato_n\",\"figrindan_q2_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_figrindan_q2_needed.py",
            "fix_location": 106,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17105
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n    *\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_ikka_gesul_q2_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_tato_n\",\"ikka_gesul_q2_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_ikka_gesul_q2_needed.py",
            "fix_location": 50,
            "fix_type": "delete",
            "id": 17106
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT if \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_kitster_banai_q5_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_tato_n\",\"kitster_banai_q5_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_kitster_banai_q5_needed.py",
            "fix_location": 28,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17107
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =\n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_lx466_q3_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_dant_n\",\"lx466_q3_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_lx466_q3_needed.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17108
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_radlee_mathiss_q1_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_tals_n\",\"radlee_mathiss_q1_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_radlee_mathiss_q1_needed.py",
            "fix_location": 50,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17109
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_singular_nak_q1_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_dath_n\",\"singular_nak_q1_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_singular_nak_q1_needed.py",
            "fix_location": 67,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17110
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_throme_gormengal_q3_needed.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"loot_nboo_n\",\"throme_gormengal_q3_needed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_throme_gormengal_q3_needed.py",
            "fix_location": 28,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17111
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =from \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission/quest_item/shared_warren_passkey_s03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"warren_item_n\",\"passkey_s03\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission/quest_item/shared_warren_passkey_s03.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17112
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "with \ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/mission_bag/shared_mission_bag.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"mission_bag\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/mission_bag/shared_mission_bag.py",
            "fix_location": 46,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17113
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-\n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/painting/shared_painting_double_helix.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"frn_n\",\"double_helix\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/painting/shared_painting_double_helix.py",
            "fix_location": 41,
            "fix_type": "delete",
            "id": 17114
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .or ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/painting/shared_painting_tato_s03.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"frn_n\",\"painting_tato_s03\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/painting/shared_painting_tato_s03.py",
            "fix_location": 15,
            "fix_type": "delete",
            "id": 17115
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n]\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/planet_map_location/shared_map_location_base.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"city_map_location\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/planet_map_location/shared_map_location_base.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17116
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):.\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/quest/quest_start/shared_ep3_clone_relics_nym_starmap_container.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"container_name\",\"security_container\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/quest/quest_start/shared_ep3_clone_relics_nym_starmap_container.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17117
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "as def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/scout/camp/shared_camp_quality.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"camp_quality\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/scout/camp/shared_camp_quality.py",
            "fix_location": 123,
            "fix_type": "modify",
            "fix_token": "",
            "id": 17118
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n    for "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/booster/shared_hutt_light_booster_s01.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/booster/shared_hutt_light_booster_s01.py",
            "fix_location": 71,
            "fix_type": "delete",
            "id": 17119
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT not )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/engine/shared_blacksun_medium_engine_s01.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/engine/shared_blacksun_medium_engine_s01.py",
            "fix_location": 114,
            "fix_type": "delete",
            "id": 17120
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return LIT ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/engine/shared_yt1300_engine_s01.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/engine/shared_yt1300_engine_s01.py",
            "fix_location": 40,
            "fix_type": "delete",
            "id": 17121
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID (.ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_blacksun_heavy_weapon2_s04.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_blacksun_heavy_weapon2_s04.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17122
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID global (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_bwing_weapon1_s04.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_bwing_weapon1_s04.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17123
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID :\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_hutt_heavy_weapon1_s01.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_hutt_heavy_weapon1_s01.py",
            "fix_location": 118,
            "fix_type": "modify",
            "fix_token": "",
            "id": 17124
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \nfor "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_hutt_medium_weapon1_s04.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_hutt_medium_weapon1_s04.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17125
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "import def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_rebel_gunboat_turretbase_s01.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_rebel_gunboat_turretbase_s01.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17126
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "except \ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_xwing_weapon1_pos_s02_0.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_xwing_weapon1_pos_s02_0.py",
            "fix_location": 45,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17127
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =\n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_xwing_weapon2_pos_s04_0.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_xwing_weapon2_pos_s04_0.py",
            "fix_location": 114,
            "fix_type": "delete",
            "id": 17128
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return elif ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/weapon/shared_ywing_weapon1_s06.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/weapon/shared_ywing_weapon1_s06.py",
            "fix_location": 78,
            "fix_type": "modify",
            "fix_token": "#COMMENT",
            "id": 17129
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    lambda \n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/attachment/wing/shared_hutt_light_wing_s02.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"item_n\",\"ship_attachment\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/attachment/wing/shared_hutt_light_wing_s02.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17130
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n)    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/armor/shared_arm_generic.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"armor_generic\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/armor/shared_arm_generic.py",
            "fix_location": 44,
            "fix_type": "delete",
            "id": 17131
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID await =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/armor/shared_arm_kse_customized_advanced_durasteel.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"arm_kse_customized_advanced_durasteel_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/armor/shared_arm_kse_customized_advanced_durasteel.py",
            "fix_location": 62,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17132
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID ((,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/armor/shared_arm_mission_reward_neutral_kse_handcrafted.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"arm_mission_reward_neutral_kse_handcrafted_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/armor/shared_arm_mission_reward_neutral_kse_handcrafted.py",
            "fix_location": 72,
            "fix_type": "delete",
            "id": 17133
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )def \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/armor/shared_arm_sorosuub_special_intermediate_durasteel.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"arm_sorosuub_special_intermediate_durasteel_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/armor/shared_arm_sorosuub_special_intermediate_durasteel.py",
            "fix_location": 32,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17134
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/armor/shared_armor_tiefighter_basic.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"armor_tiefighter_basic_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/armor/shared_armor_tiefighter_basic.py",
            "fix_location": 20,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17135
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/booster/shared_bst_incom_intimidator_mk2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"bst_incom_intimidator_mk2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/booster/shared_bst_incom_intimidator_mk2.py",
            "fix_location": 66,
            "fix_type": "delete",
            "id": 17136
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/booster/shared_bst_koensayr_special_evh12.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"bst_koensayr_special_evh12_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/booster/shared_bst_koensayr_special_evh12.py",
            "fix_location": 57,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17137
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/booster/shared_bst_mission_reward_neutral_mandal_q_series.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"bst_mission_reward_neutral_mandal_q_series_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/booster/shared_bst_mission_reward_neutral_mandal_q_series.py",
            "fix_location": 41,
            "fix_type": "delete",
            "id": 17138
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .nonlocal ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/booster/shared_bst_sds_enhanced_imperial_2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"bst_sds_enhanced_imperial_2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/booster/shared_bst_sds_enhanced_imperial_2.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17139
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID None :\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/booster/shared_bst_tiefighter_basic.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"bst_tiefighter_basic_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/booster/shared_bst_tiefighter_basic.py",
            "fix_location": 40,
            "fix_type": "delete",
            "id": 17140
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID -.ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/chassis/shared_tie_light_duty_chassis_token.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"tie_light_duty_chassis_token\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/chassis/shared_tie_light_duty_chassis_token.py",
            "fix_location": 57,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17141
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/droid_interface/shared_ddi_hk_mk1.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"ddi_hk_mk1_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/droid_interface/shared_ddi_hk_mk1.py",
            "fix_location": 92,
            "fix_type": "delete",
            "id": 17142
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    with #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/droid_interface/shared_ddi_kse_improved_manager_mk1.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"ddi_kse_improved_manager_mk1_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/droid_interface/shared_ddi_kse_improved_manager_mk1.py",
            "fix_location": 66,
            "fix_type": "delete",
            "id": 17143
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT and ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/droid_interface/shared_ddi_qualdex_droid_interface_mk3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"ddi_qualdex_droid_interface_mk3\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/droid_interface/shared_ddi_qualdex_droid_interface_mk3.py",
            "fix_location": 61,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17144
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/droid_interface/shared_ddi_sfs_imperial_3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"ddi_sfs_imperial_3_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/droid_interface/shared_ddi_sfs_imperial_3.py",
            "fix_location": 5,
            "fix_type": "delete",
            "id": 17145
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef not ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/engine/shared_eng_haor_chall_old_engine.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"eng_haor_chall_old_engine_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/engine/shared_eng_haor_chall_old_engine.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17146
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\nID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/engine/shared_eng_kse_improved_a2x.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"eng_kse_improved_a2x_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/engine/shared_eng_kse_improved_a2x.py",
            "fix_location": 71,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17147
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/engine/shared_eng_qualdex_a13.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"eng_qualdex_a13_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/engine/shared_eng_qualdex_a13.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17148
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n=    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/engine/shared_eng_sfs_imperial_5.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"eng_sfs_imperial_5_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/engine/shared_eng_sfs_imperial_5.py",
            "fix_location": 72,
            "fix_type": "delete",
            "id": 17149
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )global \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/engine/shared_engine_surronian_a2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"eng_surronian_a2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/engine/shared_engine_surronian_a2.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17150
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):def \n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/reactor/shared_rct_incom_improved_mark1.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"rct_incom_improved_mark1_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/reactor/shared_rct_incom_improved_mark1.py",
            "fix_location": 57,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17151
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/reactor/shared_rct_mandal_dxr4.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"rct_mandal_dxr4_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/reactor/shared_rct_mandal_dxr4.py",
            "fix_location": 106,
            "fix_type": "delete",
            "id": 17152
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n    while \n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/reactor/shared_rct_seinar_level2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"rct_seinar_level2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/reactor/shared_rct_seinar_level2.py",
            "fix_location": 117,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17153
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID as "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/reactor/shared_rct_taim_experimental_s3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"rct_taim_experimental_s3_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/reactor/shared_rct_taim_experimental_s3.py",
            "fix_location": 77,
            "fix_type": "delete",
            "id": 17154
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n    /\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/shield_generator/shared_shd_incom_mark2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"shd_incom_mark2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/shield_generator/shared_shd_incom_mark2.py",
            "fix_location": 46,
            "fix_type": "delete",
            "id": 17155
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID ===LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/shield_generator/shared_shd_koensayr_deflector_m2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"shd_koensayr_deflector_m2_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/shield_generator/shared_shd_koensayr_deflector_m2.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17156
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .except (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/shield_generator/shared_shd_mission_reward_rebel_incom_k77.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"shd_mission_reward_rebel_incom_k77_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/shield_generator/shared_shd_mission_reward_rebel_incom_k77.py",
            "fix_location": 78,
            "fix_type": "delete",
            "id": 17157
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    ]#COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/shield_generator/shared_shd_seinar_reflector_standard.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"shd_seinar_reflector_standard_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/shield_generator/shared_shd_seinar_reflector_standard.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17158
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\n[def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_weapon_subpro_tripleblaster.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"weapon_subpro_tripleblaster_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_weapon_subpro_tripleblaster.py",
            "fix_location": 28,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17159
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =\n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_wpn_hk_scorcher_3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"wpn_hk_scorcher_3_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_wpn_hk_scorcher_3.py",
            "fix_location": 66,
            "fix_type": "modify",
            "fix_token": ",",
            "id": 17160
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT from LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_wpn_koensayr_ion_accelerator_advanced.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"wpn_koensayr_ion_accelerator_advanced_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_wpn_koensayr_ion_accelerator_advanced.py",
            "fix_location": 15,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17161
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n)    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_wpn_rendili_sc3_disruptor.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"wpn_rendili_sc3_disruptor_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_wpn_rendili_sc3_disruptor.py",
            "fix_location": 117,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17162
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID LIT "
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_wpn_slayn_deluxe_light_ioncannon.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"wpn_slayn_deluxe_light_ioncannon_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_wpn_slayn_deluxe_light_ioncannon.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17163
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID /:\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon/shared_wpn_z95_blaster.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"wpn_z95_blaster\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon/shared_wpn_z95_blaster.py",
            "fix_location": 57,
            "fix_type": "delete",
            "id": 17164
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID del .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon_capacitor/shared_cap_kessel_rebel_deepwell_k33_prototype.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"cap_kessel_rebel_deepwell_k33_prototype_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon_capacitor/shared_cap_kessel_rebel_deepwell_k33_prototype.py",
            "fix_location": 62,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17165
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon_capacitor/shared_cap_mandal_powersoak.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"cap_mandal_powersoak_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon_capacitor/shared_cap_mandal_powersoak.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17166
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID not =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon_capacitor/shared_cap_prototype_capacitor.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"cap_prototype_capacitor\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon_capacitor/shared_cap_prototype_capacitor.py",
            "fix_location": 107,
            "fix_type": "delete",
            "id": 17167
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    while return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/components/weapon_capacitor/shared_cap_sorosuub_enhanced_dynamo_mk1.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"cap_sorosuub_enhanced_dynamo_mk1_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/components/weapon_capacitor/shared_cap_sorosuub_enhanced_dynamo_mk1.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17168
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (!ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/armor/shared_adv_durasteel_plating.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"adv_durasteel_plating\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/armor/shared_adv_durasteel_plating.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17169
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/booster/shared_base_booster_subcomponent_mk5.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"base_booster_subcomponent_mk5\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/booster/shared_base_booster_subcomponent_mk5.py",
            "fix_location": 62,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17170
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/booster/shared_xwing_booster_mk2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"xwing_booster_2\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/booster/shared_xwing_booster_mk2.py",
            "fix_location": 66,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17171
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/capacitor/shared_heavy_battery_mk3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"heavy_battery_mk3\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/capacitor/shared_heavy_battery_mk3.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17172
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "await def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/chassis/shared_chassis_hutt_light_wing_s02.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"hutt_lgt_wing_s02\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/chassis/shared_chassis_hutt_light_wing_s02.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17173
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .import (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/chassis/shared_tieaggressor_deed.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"tieaggressor_deed\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/chassis/shared_tieaggressor_deed.py",
            "fix_location": 58,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17174
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .(LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/droid_interface/shared_droid_brain_interface.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"droid_brain_interface\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/droid_interface/shared_droid_brain_interface.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17175
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .=LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/engine/shared_engine_limiter_mk2.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"engine_limiter_mk2\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/engine/shared_engine_limiter_mk2.py",
            "fix_location": 105,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17176
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n    in \n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/reactor/shared_base_reactor.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"base_reactor\",\"base\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/reactor/shared_base_reactor.py",
            "fix_location": 57,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17177
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/repair/shared_repair_kit_chassis.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"repair_kit_chassis\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/repair/shared_repair_kit_chassis.py",
            "fix_location": 72,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17178
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )is \n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/shields/shared_base_shields_subcomponent_mk4.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"base_shields_subcomponent_mk4\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/shields/shared_base_shields_subcomponent_mk4.py",
            "fix_location": 91,
            "fix_type": "delete",
            "id": 17179
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n    /\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/weapon/missile/shared_base_countermeasure.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"obj_n\",\"unknown_object\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/weapon/missile/shared_base_countermeasure.py",
            "fix_location": 61,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17180
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID LIT LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/weapon/missile/shared_wpn_launcher_proton_mk3.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"wpn_launcher_proton_mk3\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/weapon/missile/shared_wpn_launcher_proton_mk3.py",
            "fix_location": 114,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17181
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return break \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/weapon/shared_basic_weapon.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space_crafting_n\",\"base_weapon\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/weapon/shared_basic_weapon.py",
            "fix_location": 13,
            "fix_type": "delete",
            "id": 17182
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID )import :\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/crafted/weapon/shared_weapon_subpro_tripleblaster.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"weapon_subpro_tripleblaster_n\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/crafted/weapon/shared_weapon_subpro_tripleblaster.py",
            "fix_location": 58,
            "fix_type": "delete",
            "id": 17183
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .LIT ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/ship/interior_components/shared_booster_interior.iff\"\n    result.attribute_template_id = 8\n    result.stfName(\"space/space_item\",\"booster_interior\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/ship/interior_components/shared_booster_interior.py",
            "fix_location": 32,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17184
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/sign/municipal/shared_municipal_sign_hanging_commerce.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"sign_name\",\"sign\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/sign/municipal/shared_municipal_sign_hanging_commerce.py",
            "fix_location": 13,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17185
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID )\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/skill_buff/shared_skill_buff_carbine_accuracy.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"skill_buff_n\",\"carbine_accuracy\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/skill_buff/shared_skill_buff_carbine_accuracy.py",
            "fix_location": 40,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17186
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID return ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/space/content_infrastructure/shared_basic_corridor_point.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"patrol_point\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/space/content_infrastructure/shared_basic_corridor_point.py",
            "fix_location": 59,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17187
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .lambda (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/space/special_loot/shared_firespray_schematic_part6.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"space_item_n\",\"firespray_schematic_part6\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/space/special_loot/shared_firespray_schematic_part6.py",
            "fix_location": 12,
            "fix_type": "delete",
            "id": 17188
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ():\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/space/story_loot/shared_loot_naboo_civspeeder.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"space/story_loot_n\",\"loot_naboo_civspeeder\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/space/story_loot/shared_loot_naboo_civspeeder.py",
            "fix_location": 78,
            "fix_type": "delete",
            "id": 17189
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n    try \n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/survey_tool/shared_survey_tool_mineral.iff\"\n    result.attribute_template_id = 1\n    result.stfName(\"item_n\",\"survey_tool_mineral\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/survey_tool/shared_survey_tool_mineral.py",
            "fix_location": 61,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17190
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID continue LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/terminal/shared_terminal_hq_turret_control.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"terminal_name\",\"terminal_hq_turret_control\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/terminal/shared_terminal_hq_turret_control.py",
            "fix_location": 58,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17191
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID del ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/terminal/shared_terminal_shipping.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"terminal_name\",\"terminal_shipping\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/terminal/shared_terminal_shipping.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17192
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID try ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/transport/base/shared_transport_base.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"item_n\",\"base_transport\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/transport/base/shared_transport_base.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17193
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/veteran_reward/one_year_anniversary/shared_painting_05.iff\"\n    result.attribute_template_id = -1\n    result.stfName(\"frn_n\",\"painting_vet_05\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/veteran_reward/one_year_anniversary/shared_painting_05.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17194
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID async (ID ):\n\n    ID .ID =LIT \n    ID .ID =-LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/apron/shared_apron_s01.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"apron_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/apron/shared_apron_s01.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17195
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID if (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/chitin/shared_armor_chitin_s01_gloves.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"armor_chitin_s01_gloves\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/chitin/shared_armor_chitin_s01_gloves.py",
            "fix_location": 49,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17196
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT try ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/ithorian_guardian/shared_ith_armor_s02_helmet.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"ith_armor_s02_helmet\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/ithorian_guardian/shared_ith_armor_s02_helmet.py",
            "fix_location": 117,
            "fix_type": "delete",
            "id": 17197
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID !=\n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/mandalorian/shared_armor_mandalorian_chest_plate.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"armor_mandalorian_chest_plate\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/mandalorian/shared_armor_mandalorian_chest_plate.py",
            "fix_location": 45,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17198
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =\n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/marauder/shared_armor_marauder_s03_gloves.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"armor_marauder_s03_gloves\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/marauder/shared_armor_marauder_s03_gloves.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17199
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": ":\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/ris/shared_armor_ris_gloves.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"armor_ris_gloves\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/ris/shared_armor_ris_gloves.py",
            "fix_location": 66,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17200
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/armor/ubese/shared_armor_ubese_bracer_l.iff\"\n    result.attribute_template_id = 0\n    result.stfName(\"wearables_name\",\"armor_ubese_bracer_l\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/armor/ubese/shared_armor_ubese_bracer_l.py",
            "fix_location": 9,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17201
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (raise ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/bandolier/shared_bandolier_s02.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"bandolier_s02\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/bandolier/shared_bandolier_s02.py",
            "fix_location": 24,
            "fix_type": "delete",
            "id": 17202
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .pass ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/base/shared_base_bracer_l.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"bracer_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/base/shared_base_bracer_l.py",
            "fix_location": 5,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17203
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef if (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/base/shared_base_hat.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"hat_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/base/shared_base_hat.py",
            "fix_location": 71,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17204
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT \n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/base/shared_base_robe_longsleeve.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"robe_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/base/shared_base_robe_longsleeve.py",
            "fix_location": 13,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17205
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID )\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/belt/shared_belt_s11.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"belt_s11\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/belt/shared_belt_s11.py",
            "fix_location": 57,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17206
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID )ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/bodysuit/shared_bodysuit_sarlacc_coverall.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"bodysuit_sarlacc_coverall\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/bodysuit/shared_bodysuit_sarlacc_coverall.py",
            "fix_location": 72,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17207
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )[\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/bracelet/shared_bracelet_s06_r.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"bracelet_s06\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/bracelet/shared_bracelet_s06_r.py",
            "fix_location": 49,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17208
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT lambda ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/dress/shared_dress_s29.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"dress_s29\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/dress/shared_dress_s29.py",
            "fix_location": 23,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17209
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID import ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/gloves/shared_gloves_s07.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"gloves_s07\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/gloves/shared_gloves_s07.py",
            "fix_location": 23,
            "fix_type": "delete",
            "id": 17210
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID class .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/hat/shared_nightsister_hat_s01.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"nightsister_hat_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/hat/shared_nightsister_hat_s01.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17211
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID :\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/ithorian/shared_ith_bandolier_s08.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"ith_bandolier_s08\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/ithorian/shared_ith_bandolier_s08.py",
            "fix_location": 40,
            "fix_type": "delete",
            "id": 17212
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID as .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/ithorian/shared_ith_gloves_s02.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"ith_gloves_s02\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/ithorian/shared_ith_gloves_s02.py",
            "fix_location": 106,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17213
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n    finally return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/ithorian/shared_ith_necklace_s09.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"ith_necklace_s09\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/ithorian/shared_ith_necklace_s09.py",
            "fix_location": 15,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17214
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\ncontinue     ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/ithorian/shared_ith_shirt_s02.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"ith_shirt_s02\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/ithorian/shared_ith_shirt_s02.py",
            "fix_location": 72,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17215
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )as \n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/jacket/shared_jacket_s08.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"jacket_s08\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/jacket/shared_jacket_s08.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17216
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID lambda =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/necklace/shared_necklace_flashy_choker.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"necklace_flashy_choker\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/necklace/shared_necklace_flashy_choker.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17217
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):elif \n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/necklace/shared_necklace_s11.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"necklace_s11\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/necklace/shared_necklace_s11.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17218
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\nfor     ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/robe/shared_robe_jedi_test.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"robe_s05\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/robe/shared_robe_jedi_test.py",
            "fix_location": 117,
            "fix_type": "delete",
            "id": 17219
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID except \n"
    },
    {
        "code": "\ndef create(kernel):\n    result.stfName(\"wearables_name\",\"shirt_s15\")\n\n    #### BEGIN MODIFICATIONS ####\n    result.max_condition = 1000\n    ####  END MODIFICATIONS  ####\n\n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/shirt/shared_shirt_s15.py",
            "fix_location": 19,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17220
        },
        "correct_code": "\ndef ID (ID ):\n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    ID .ID =LIT \n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n    def .ID (LIT ,LIT )\n\n    #COMMENT\n\n    ID .ID =LIT \n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/skirt/shared_skirt_s09.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"skirt_s09\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/skirt/shared_skirt_s09.py",
            "fix_location": 49,
            "fix_type": "delete",
            "id": 17221
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT return \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/tangible/wearables/wookiee/shared_wke_hood_s01.iff\"\n    result.attribute_template_id = 11\n    result.stfName(\"wearables_name\",\"wke_hood_s01\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/tangible/wearables/wookiee/shared_wke_hood_s01.py",
            "fix_location": 32,
            "fix_type": "delete",
            "id": 17222
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT continue \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/base/shared_base_weapon.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"obj_n\",\"unknown_weapon\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/base/shared_base_weapon.py",
            "fix_location": 72,
            "fix_type": "delete",
            "id": 17223
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )=\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/2h_sword/crafted_saber/shared_sword_lightsaber_two_handed_s13_gen1.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_2h_type13\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/2h_sword/crafted_saber/shared_sword_lightsaber_two_handed_s13_gen1.py",
            "fix_location": 114,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17224
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return with \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/2h_sword/crafted_saber/shared_sword_lightsaber_two_handed_s6.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_2h\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/2h_sword/crafted_saber/shared_sword_lightsaber_two_handed_s6.py",
            "fix_location": 78,
            "fix_type": "delete",
            "id": 17225
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    global #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/axe/base/shared_axe_base.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"obj_n\",\"unknown_weapon\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/axe/base/shared_axe_base.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17226
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID )(ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/polearm/crafted_saber/shared_sword_lightsaber_polearm_s1_gen3.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_lance_type1\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/polearm/crafted_saber/shared_sword_lightsaber_polearm_s1_gen3.py",
            "fix_location": 66,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17227
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_gen3.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_gen3\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_gen3.py",
            "fix_location": 44,
            "fix_type": "insert",
            "fix_token": "=",
            "id": 17228
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_s2_gen2.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_type2\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_s2_gen2.py",
            "fix_location": 13,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17229
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID )==\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_s8.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_type8\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/sword/crafted_saber/shared_sword_lightsaber_one_handed_s8.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17230
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .=LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/melee/sword/shared_sword_lightsaber_anakin.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"sword_lightsaber_anakin\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/melee/sword/shared_sword_lightsaber_anakin.py",
            "fix_location": 66,
            "fix_type": "insert",
            "fix_token": ",",
            "id": 17231
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/ranged/carbine/shared_carbine_dh17_snubnose.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"carbine_dh17_snubnose\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/ranged/carbine/shared_carbine_dh17_snubnose.py",
            "fix_location": 13,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17232
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID )class \n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/ranged/grenade/base/shared_grenade_base.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"obj_n\",\"unknown_weapon\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/ranged/grenade/base/shared_grenade_base.py",
            "fix_location": 1,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17233
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\nyield ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/ranged/pistol/shared_pistol_fwg5_quest.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"pistol_fwg5_quest\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/ranged/pistol/shared_pistol_fwg5_quest.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17234
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "*def ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "\ndef create(kernel):\n\n    result.template = \"object/weapon/ranged/rifle/shared_rifle_lightning.iff\"\n    result.attribute_template_id = 10\n    result.stfName(\"weapon_name\",\"rifle_lightning\")\t\t\n    \n    #### BEGIN MODIFICATIONS ####\n    ####  END MODIFICATIONS  ####\n    \n    return result\n",
        "metadata": {
            "file": "py150_files/data/anhstudios/swganh/data/scripts/templates/object/weapon/ranged/rifle/shared_rifle_lightning.py",
            "fix_location": 61,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17235
        },
        "correct_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID (LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n\n    ID .ID =LIT \n    ID .ID =LIT \n    ID .ID global LIT ,LIT )\n\n    #COMMENT\n\n    #COMMENT\n\n\n    return ID \n"
    },
    {
        "code": "def __call__(cls, *args, **kwargs):\n    if cls not in cls._instances:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anishathalye/dotbot/dotbot/util/singleton.py",
            "fix_location": 0,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17236
        },
        "correct_code": "def ID (ID ,*ID ,**ID ):\n    if ID not in ID .ID :\n        pass \n",
        "wrong_code": "ID (ID ,*ID ,**ID ):\n    if ID not in ID .ID :\n        pass \n"
    },
    {
        "code": "\n@server.route('/')\ndef alexa_skills_kit_requests():\n    request_obj = request.get_json()\n    return lambda_handler(request_obj)\n",
        "metadata": {
            "file": "py150_files/data/anjishnu/ask-alexa-pykit/development_server.py",
            "fix_location": 39,
            "fix_type": "delete",
            "id": 17237
        },
        "correct_code": "\n@ID .ID (LIT )\ndef ID ():\n    ID =ID .ID ()\n    return ID (ID )\n",
        "wrong_code": "\n@ID .ID (LIT )\ndef ID ():\n    ID =ID ..ID ()\n    return ID (ID )\n"
    },
    {
        "code": "def finalize_options(self):\n    TestCommand.finalize_options(self)\n    self.test_args = []\n    self.test_suite = True\n",
        "metadata": {
            "file": "py150_files/data/anler/django-dev-commands/setup.py",
            "fix_location": 25,
            "fix_type": "delete",
            "id": 17238
        },
        "correct_code": "def ID (ID ):\n    ID .ID (ID )\n    ID .ID =[]\n    ID .ID =LIT \n",
        "wrong_code": "def ID (ID ):\n    ID .ID with (ID )\n    ID .ID =[]\n    ID .ID =LIT \n"
    },
    {
        "code": "\ndef run_tests(self):\n    import pytest\n    errno = pytest.main(self.test_args)\n    sys.exit(errno)\n",
        "metadata": {
            "file": "py150_files/data/anler/django-dev-commands/setup.py",
            "fix_location": 66,
            "fix_type": "delete",
            "id": 17239
        },
        "correct_code": "\ndef ID (ID ):\n    import ID \n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    import ID \n    ID =ID .ID (ID .ID )\n    ID .ID class (ID )\n"
    },
    {
        "code": "\ndef _get_inventory_source_id(self, group):\n    # If we got a group ID rather than a group, get the group.\n    if isinstance(group, int):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/lib/tower_cli/resources/group.py",
            "fix_location": 51,
            "fix_type": "insert",
            "fix_token": "pass",
            "id": 17240
        },
        "correct_code": "\ndef ID (ID ,ID ):\n#COMMENT\n\n    if ID (ID ,ID ):\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n#COMMENT\n\n    if ID (ID ,ID ):\n\n"
    },
    {
        "code": "\n@resources.command\ndef foo(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 23,
            "fix_type": "delete",
            "id": 17241
        },
        "correct_code": "\n@ID .ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n@ID .ID \ndef ID (ID ):or \n    pass \n"
    },
    {
        "code": "\n@resources.command\ndef bar(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 22,
            "fix_type": "delete",
            "id": 17242
        },
        "correct_code": "\n@ID .ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n@ID .ID \ndef ID (ID )while :\n    pass \n"
    },
    {
        "code": "\ndef boring_method(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17243
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID \nID ):\n    pass \n"
    },
    {
        "code": "\ndef test_inherited_commands(self):\n    # Create the resource.\n    class MyResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17244
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "\ndef ID elif (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\n@resources.command\ndef list(self, **kwargs):\n    return super(MyResource, self).list(**kwargs)\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 53,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17245
        },
        "correct_code": "\n@ID .ID \ndef ID (ID ,**ID ):\n    return ID (ID ,ID ).ID (**ID )\n",
        "wrong_code": "\n@ID .ID \ndef ID (ID ,**ID ):\n    return ID (ID ,ID )ID (**ID )\n"
    },
    {
        "code": "\ndef test_subclassed_commands(self):\n    # Create the subclass resource, overriding a superclass command.\n    class MyResource(models.Resource):\n\n        @resources.command\n        def list(self, **kwargs):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 59,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17246
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n\n        @ID .ID \n        def ID (ID ,**ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n\n        @:.ID \n        def ID (ID ,**ID ):\n            pass \n"
    },
    {
        "code": "\ndef test_fields(self):\n    # Create the resource.\n    class MyResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17247
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "\ndef ID (ID -:\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_error_no_endpoint(self):\n    \"\"\"Establish that Resource subclasses are required to have\n        an endpoint, and attempting to create one that lacks an endpoint\n        raises TypeError.\n        \"\"\"\n    with self.assertRaises(TypeError):\n        class MyResource(models.Resource):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 45,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17248
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    with ID .ID (ID ):\n        class ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    with ID .ID (ID )global \n        class ID (ID .ID ):\n            pass \n"
    },
    {
        "code": "\ndef test_endpoint_normalization(self):\n    \"\"\"Establish that the endpoints have leading and trailing slashes\n        added if they are not present on a resource.\n        \"\"\"\n    class MyResource(models.Resource):\n        endpoint = 'foo'\n    self.assertEqual(MyResource.endpoint, '/foo/')\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17249
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    class ID (ID .ID ):\n        ID =LIT \n    ID .ID (ID .ID ,LIT )\n",
        "wrong_code": "\n:def ID (ID ):\n    LIT \n    class ID (ID .ID ):\n        ID =LIT \n    ID .ID (ID .ID ,LIT )\n"
    },
    {
        "code": "def setUp(self):\n    class BasicResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 7,
            "fix_type": "delete",
            "id": 17250
        },
        "correct_code": "def ID (ID ):\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "def ID try (ID ):\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_command_instance(self):\n    \"\"\"Establish that the command based on a resource is, in fact, a\n        click MultiCommand.\n        \"\"\"\n    # Assert that it is a click command, and that it has the commands\n    # available on the resource.\n    self.assertIsInstance(self.command, click.MultiCommand)\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 75,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17251
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    #COMMENT\n\n    #COMMENT\n\n    ID .ID (ID .ID ,ID .ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    #COMMENT\n\n    #COMMENT\n\n    ID .ID (ID .ID ,ID ID )\n"
    },
    {
        "code": "\ndef test_list_commands(self):\n    \"\"\"Establish that the `list_commands` method for the command\n        corresponds to the commands available on the resource.\n        \"\"\"\n    self.assertEqual(set(self.resource.commands),\n                     set(self.command.list_commands(None)))\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 36,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17252
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID .ID (ID (ID .ID .ID ),\n    ID (ID .ID .ID (ID )))\n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID .ID (nonlocal (ID .ID .ID ),\n    ID (ID .ID .ID (ID )))\n"
    },
    {
        "code": "\ndef test_get_command(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17253
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": ")\ndef ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_get_command_error(self):\n    \"\"\"Establish that if `get_command` is called against a command that\n        does not actually exist on the resource, that we raise UsageError.\n        \"\"\"\n    with self.assertRaises(exc.UsageError):\n        self.command.get_command(None, 'bogus')\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 48,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17254
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    with ID .ID (ID .ID ):\n        ID .ID .ID (ID ,LIT )\n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    with ID .ID (ID .ID +:\n        ID .ID .ID (ID ,LIT )\n"
    },
    {
        "code": "\n@resources.command\ndef my_method(self, pk):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 28,
            "fix_type": "delete",
            "id": 17255
        },
        "correct_code": "\n@ID .ID \ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID .ID \ndef ID (ID ,ID ):\n*    pass \n"
    },
    {
        "code": "\ndef test_command_with_pk(self):\n    # Create a resource with an appropriate command.\n    class PKResource(models.BaseResource):\n\n        @resources.command\n        def my_method(self, pk):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 90,
            "fix_type": "delete",
            "id": 17256
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n\n        @ID .ID \n        def ID (ID ,ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n\n        @ID .ID \n        def ID (ID ,ID import ):\n            pass \n"
    },
    {
        "code": "\n@resources.command(use_fields_as_options=False)\ndef noopt(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 31,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17257
        },
        "correct_code": "\n@ID .ID (ID =LIT )\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n@ID .ID (ID =LIT )\ndef ID (ID :\n    pass \n"
    },
    {
        "code": "\n@resources.command(use_fields_as_options=('f2',))\ndef noopt(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 20,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17258
        },
        "correct_code": "\n@ID .ID (ID =(LIT ,))\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n@ID .ID (ID =(LIT ,class )\ndef ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_fields_not_options(self):\n    # Create a resource with a field that is an option and another\n    # field that isn't.\n    class NoOptionResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17259
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "\ndef ID (ID ):==#COMMENT\n\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_field_explicit_key(self):\n    # Create a resource with a field that has an explicit key.\n    class ExplicitKeyResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 29,
            "fix_type": "modify",
            "fix_token": "class",
            "id": 17260
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n#COMMENT\n\n    try ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_docstring_replacement_an(self):\n    # Create a resource with an approriate name.\n    class Oreo(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 15,
            "fix_type": "modify",
            "fix_token": "#COMMENT",
            "id": 17261
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\nfinally \n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_docstring_replacement_y(self):\n    # Create a resource with an approriate name.\n    class Oreo(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17262
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "or def ID (ID ):\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "def setUp(self):\n    # Create a resource class that can be used across this particular\n    # suite.\n    class FooResource(models.Resource):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 11,
            "fix_type": "delete",
            "id": 17263
        },
        "correct_code": "def ID (ID ):\n#COMMENT\n\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n",
        "wrong_code": "def ID (ID global ):\n#COMMENT\n\n#COMMENT\n\n    class ID (ID .ID ):\n        pass \n"
    },
    {
        "code": "\ndef test_get(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 31,
            "fix_type": "delete",
            "id": 17264
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID from as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_list_no_kwargs(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 47,
            "fix_type": "modify",
            "fix_token": "pass",
            "id": 17265
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        await \n"
    },
    {
        "code": "\ndef test_list_all_pages(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 13,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17266
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID )[\n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_list_with_page_1_special_case(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 47,
            "fix_type": "delete",
            "id": 17267
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        :pass \n"
    },
    {
        "code": "\ndef test_list_custom_kwargs(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 14,
            "fix_type": "delete",
            "id": 17268
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):import \n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_list_duplicate_kwarg(self):\n    with client.test_mode as t:\n        with self.assertRaises(exc.BadRequest):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 67,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17269
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID :\n            pass \n"
    },
    {
        "code": "\ndef test_get_unexpected_zero_results(self):\n    with client.test_mode as t:\n        with self.assertRaises(exc.NotFound):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17270
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n"
    },
    {
        "code": "\ndef test_list_with_none_kwargs(self):\n    # Register the request and make the call.\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17271
        },
        "correct_code": "\ndef ID (ID ):\n#COMMENT\n\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n#COMMENT\n\n    ,with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_list_with_pagination(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 53,
            "fix_type": "modify",
            "fix_token": "",
            "id": 17272
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \nfor "
    },
    {
        "code": "\ndef test_reading_with_file(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17273
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID )::    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_create(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 34,
            "fix_type": "delete",
            "id": 17274
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as elif ID :\n        pass \n"
    },
    {
        "code": "\ndef test_create_already_existing(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17275
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\nID (ID ):\n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_modify(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 53,
            "fix_type": "delete",
            "id": 17276
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n=="
    },
    {
        "code": "\ndef test_modify_no_changes(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17277
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID \n        pass \n"
    },
    {
        "code": "\ndef test_modify_ignore_kwargs_none(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 31,
            "fix_type": "delete",
            "id": 17278
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID async as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_write_file_like_object(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 19,
            "fix_type": "insert",
            "fix_token": "with",
            "id": 17279
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_delete_with_pk(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 47,
            "fix_type": "delete",
            "id": 17280
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        !pass \n"
    },
    {
        "code": "\ndef test_delete_without_pk(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17281
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "]def ID (ID ):\n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_delete_with_pk_already_missing(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 13,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17282
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID )raise \n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_delete_with_pk_already_missing_exc(self):\n    with client.test_mode as t:\n        with self.assertRaises(exc.NotFound):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 5,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17283
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef :(ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n"
    },
    {
        "code": "\ndef test_delete_without_pk_already_missing(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17284
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef (ID ):\n    with ID .ID as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_delete_without_pk_already_missing_exc(self):\n    with client.test_mode as t:\n        with self.assertRaises(exc.NotFound):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17285
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef ID ]ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n"
    },
    {
        "code": "\ndef test_assoc_already_present(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 31,
            "fix_type": "delete",
            "id": 17286
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID except as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_assoc_not_already_present(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 34,
            "fix_type": "delete",
            "id": 17287
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as lambda ID :\n        pass \n"
    },
    {
        "code": "\ndef test_disassoc_not_already_present(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17288
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID \n        pass \n"
    },
    {
        "code": "\ndef test_disassoc_already_present(self):\n    with client.test_mode as t:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 28,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17289
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .is as ID :\n        pass \n"
    },
    {
        "code": "\ndef test_lookup_with_unique_field_not_present(self):\n    \"\"\"Establish that a if _lookup is invoked without any unique\n        field specified, that BadRequest is raised.\n        \"\"\"\n    with client.test_mode:\n        with self.assertRaises(exc.BadRequest):\n            self.res._lookup(description='abcd')\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 36,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17290
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    with ID .ID :\n        with ID .ID (ID .ID ):\n            ID .ID .ID (ID =LIT )\n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    with ID ID :\n        with ID .ID (ID .ID ):\n            ID .ID .ID (ID =LIT )\n"
    },
    {
        "code": "\ndef test_lookup_errant_found(self):\n    with client.test_mode as t:\n        with self.assertRaises(exc.Found):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 67,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17291
        },
        "correct_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n    with ID .ID as ID :\n        with ID .ID (ID .ID with :\n            pass \n"
    },
    {
        "code": "def test_status_not_implemented(self):\n    \"\"\"Establish that the abstract MonitorableResource's status\n        method raises NotImplementedError.\n        \"\"\"\n    with self.assertRaises(NotImplementedError):\n        models.MonitorableResource().status(None)\n",
        "metadata": {
            "file": "py150_files/data/ansible/tower-cli/tests/test_models_base.py",
            "fix_location": 4,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17292
        },
        "correct_code": "def ID (ID ):\n    LIT \n    with ID .ID (ID ):\n        ID .ID ().ID (ID )\n",
        "wrong_code": "def (ID ):\n    LIT \n    with ID .ID (ID ):\n        ID .ID ().ID (ID )\n"
    },
    {
        "code": "\ndef read_file(filename):\n    try:\n        pass\n    except IOError:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/antoinemartin/django-windows-tools/setup.py",
            "fix_location": 38,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17293
        },
        "correct_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    try :\n        pass except ID :\n        pass \n"
    },
    {
        "code": "\n\ndef can_access_toolbar(request):\n    if not settings.TOOLBAR_ENABLED:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/antonagestam/django-text/text/utils.py",
            "fix_location": 31,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17294
        },
        "correct_code": "\n\ndef ID (ID ):\n    if not ID .ID :\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ):\n    if not ID .:\n        pass \n"
    },
    {
        "code": "\n\ndef total_seconds(td):\n    if hasattr(td, 'total_seconds'):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 15,
            "fix_type": "delete",
            "id": 17295
        },
        "correct_code": "\n\ndef ID (ID ):\n    if ID (ID ,LIT ):\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ):finally \n    if ID (ID ,LIT ):\n        pass \n"
    },
    {
        "code": "\ndef __init__(self, conn):\n    self.conn = conn\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 26,
            "fix_type": "delete",
            "id": 17296
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID .ID =ID \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    ID lambda .ID =ID \n"
    },
    {
        "code": "\ndef get(self, key):\n    return self.conn.get(key)\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17297
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID .ID .ID (ID )\n",
        "wrong_code": "\ndef ID finally (ID ,ID ):\n    return ID .ID .ID (ID )\n"
    },
    {
        "code": "\ndef set(self, key, value, expires=None):\n    if not expires:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 76,
            "fix_type": "delete",
            "id": 17298
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID =ID ):\n    if not ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID =ID ):\n    if not ID :\n        pass \n    else :\n    /pass \n"
    },
    {
        "code": "\ndef delete(self, key):\n    self.conn.delete(key)\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17299
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID .ID .ID (ID )\n",
        "wrong_code": "\ndef ID ID ,ID ):\n    ID .ID .ID (ID )\n"
    },
    {
        "code": "\ndef clear(self):\n    \"\"\"Helper for clearing all the keys in a database. Use with\n        caution!\"\"\"\n    for key in self.conn.keys():\n        self.conn.delete(key)\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 41,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17300
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    for ID in ID .ID .ID ():\n        ID .ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    for ID in ID ID .ID ():\n        ID .ID .ID (ID )\n"
    },
    {
        "code": "\ndef close(self):\n    self.conn.disconnect()\n",
        "metadata": {
            "file": "py150_files/data/SickRage/SickRage/lib/cachecontrol/caches/redis_cache.py",
            "fix_location": 26,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17301
        },
        "correct_code": "\ndef ID (ID ):\n    ID .ID .ID ()\n",
        "wrong_code": "\ndef ID (ID ):\n    ID .ID )ID ()\n"
    },
    {
        "code": "\ndef __init__(self, *args, **kw):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/commands/completion.py",
            "fix_location": 24,
            "fix_type": "delete",
            "id": 17302
        },
        "correct_code": "\ndef ID (ID ,*ID ,**ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,*ID ,**ID )yield :\n    pass \n"
    },
    {
        "code": "\ndef run(self, options, args):\n    if options.shell in shells:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/commands/completion.py",
            "fix_location": 13,
            "fix_type": "delete",
            "id": 17303
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    if ID .ID in ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,pass ID ,ID ):\n    if ID .ID in ID :\n        pass \n    else :\n        pass \n"
    },
    {
        "code": "\n\ndef user_cache_dir(appname):\n    if WINDOWS:\n        pass\n    elif sys.platform == \"darwin\":\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/utils/appdirs.py",
            "fix_location": 89,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17304
        },
        "correct_code": "\n\ndef ID (ID ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else yield \n        pass \n"
    },
    {
        "code": "\n\ndef user_data_dir(appname, roaming=False):\n    if WINDOWS:\n        pass\n    elif sys.platform == \"darwin\":\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/utils/appdirs.py",
            "fix_location": 55,
            "fix_type": "modify",
            "fix_token": "elif",
            "id": 17305
        },
        "correct_code": "\n\ndef ID (ID ,ID =LIT ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ,ID =LIT ):\n    if ID :\n        pass \n    :ID .ID ==LIT :\n        pass \n    else :\n        pass \n"
    },
    {
        "code": "\n\ndef user_log_dir(appname):\n    if WINDOWS:\n        pass\n    elif sys.platform == \"darwin\":\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/utils/appdirs.py",
            "fix_location": 65,
            "fix_type": "delete",
            "id": 17306
        },
        "correct_code": "\n\ndef ID (ID ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :as \n        pass \n    else :\n        pass \n"
    },
    {
        "code": "\n\ndef user_config_dir(appname, roaming=True):\n    if WINDOWS:\n        pass\n    elif sys.platform == \"darwin\":\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/utils/appdirs.py",
            "fix_location": 118,
            "fix_type": "delete",
            "id": 17307
        },
        "correct_code": "\n\ndef ID (ID ,ID =LIT ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\n\ndef ID (ID ,ID =LIT ):\n    if ID :\n        pass \n    elif ID .ID ==LIT :\n        pass \n    else :\n        pass \n    class "
    },
    {
        "code": "\n\n# -- Windows support functions --\n\ndef _get_win_folder_from_registry(csidl_name):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/anzev/hedwig/build/pip/pip/utils/appdirs.py",
            "fix_location": 13,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17308
        },
        "correct_code": "\n\n#COMMENT\n\n\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n\n#COMMENT\n\n\nID (ID ):\n    pass \n"
    },
    {
        "code": "\n\ndef get_parameters_metadata():\n    for row in data:\n        for name in fields_name:\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 53,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17309
        },
        "correct_code": "\n\ndef ID ():\n    for ID in ID :\n        for ID in ID :\n            pass \n",
        "wrong_code": "\n\ndef ID ():\n    for ID in ID :\n        for ID in ID while \n            pass \n"
    },
    {
        "code": "\n\ndef _reshape_values(values, unique_values):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17310
        },
        "correct_code": "\n\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "in \n\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\n\ndef _calculate_time(unique_times, time_step):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 10,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17311
        },
        "correct_code": "\n\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n\ndef ID (,ID ):\n    pass \n"
    },
    {
        "code": "\n\ndef _make_unique(lats, lons, times):\n    unique_times = np.unique(times)\n\n    return (unique_lats, unique_lons, unique_times)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 27,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17312
        },
        "correct_code": "\n\ndef ID (ID ,ID ,ID ):\n    ID =ID .ID (ID )\n\n    return (ID ,ID ,ID )\n",
        "wrong_code": "\n\ndef ID (ID ,ID ,ID ):    ID =ID .ID (ID )\n\n    return (ID ,ID ,ID )\n"
    },
    {
        "code": "\n\ndef _get_data(url):\n\n    for i in range(len(data) - 1):  # Because the last row is empty, \"len(data)-1\" is used.\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 6,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17313
        },
        "correct_code": "\n\ndef ID (ID ):\n\n    for ID in ID (ID (ID )-LIT ):#COMMENT\n\n        pass \n",
        "wrong_code": "\n\ndef (ID ):\n\n    for ID in ID (ID (ID )-LIT ):#COMMENT\n\n        pass \n"
    },
    {
        "code": "\n\ndef _generate_query_url(dataset_id, parameter_id, min_lat, max_lat, min_lon, max_lon, start_time, end_time, time_step):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 14,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17314
        },
        "correct_code": "\n\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "\n\ndef ID (ID ,,ID ,ID ,ID ,ID ,ID ,ID ,ID ):\n    pass \n"
    },
    {
        "code": "\n\ndef _get_parameter_info(parameters_metadata, parameter_id):\n\n    for dic in parameters_metadata:\n        if int(dic['parameter_id']) == parameter_id:\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 67,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17315
        },
        "correct_code": "\n\ndef ID (ID ,ID ):\n\n    for ID in ID :\n        if ID (ID [LIT ])==ID :\n            pass \n",
        "wrong_code": "\n\ndef ID (ID ,ID ):\n\n    for ID in ID :\n        if ID (ID [LIT ])==:\n            pass \n"
    },
    {
        "code": "\n\ndef parameter_dataset(dataset_id, parameter_id, min_lat, max_lat, min_lon, max_lon, start_time, end_time, name=''):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw/data_source/rcmed.py",
            "fix_location": 45,
            "fix_type": "insert",
            "fix_token": "=",
            "id": 17316
        },
        "correct_code": "\n\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID =LIT ):\n    pass \n",
        "wrong_code": "\n\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID LIT ):\n    pass \n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    not_minimal_config = \"\"\"\n            datasets:\n        \"\"\"\n    self.not_minimal = yaml.load(not_minimal_config)\n\n    not_well_formed_config = \"\"\"\n        datasets:\n            reference:\n                data_source: local\n                file_count: 1\n                path: /a/fake/path/file.py\n                variable: pr\n\n            targets:\n                - data_source: local\n                  file_count: 5\n                  file_glob_pattern: something for globbing files here\n                  variable: pr\n                  optional_args:\n                      name: Target1\n\n                - data_source: esgf\n                  dataset_id: fake dataset id\n                  variable: pr\n                  esgf_username: my esgf username\n                  esgf_password: my esgf password\n\n        metrics:\n            - Bias\n            - TemporalStdDev\n        \"\"\"\n    self.not_well_formed = yaml.load(not_well_formed_config)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 4,
            "fix_type": "delete",
            "id": 17317
        },
        "correct_code": "@ID \ndef ID (ID ):\n    ID =LIT \n    ID .ID =ID .ID (ID )\n\n    ID =LIT \n    ID .ID =ID .ID (ID )\n",
        "wrong_code": "@ID del \ndef ID (ID ):\n    ID =LIT \n    ID .ID =ID .ID (ID )\n\n    ID =LIT \n    ID .ID =ID .ID (ID )\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17318
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \ndef ID (ID ):\n    pass \nawait "
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_no_metrics(self, mock_logger):\n    ret = parser._valid_minimal_config(self.no_metrics)\n    self.assertFalse(ret)\n\n    mock_logger.error.assert_called_with(\n        'No metrics specified in configuration data.'\n    )\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 89,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17319
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n\n    ID .ID .ID (\n    LIT \n    )\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n\n    ID .ID .ID (=LIT \n    )\n"
    },
    {
        "code": "\ndef test_unary_with_reference(self):\n    ret = parser._valid_minimal_config(self.unary_with_reference)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 5,
            "fix_type": "delete",
            "id": 17320
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef in ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_unary_with_target(self):\n    ret = parser._valid_minimal_config(self.unary_with_target)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17321
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID :\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_valid_binary(self):\n    ret = parser._valid_minimal_config(self.binary_valid)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17322
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\nID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_binary_no_reference(self, mock_logger):\n    pass\n    \n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 27,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17323
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID (:\n    pass \n\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 16,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17324
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \ndef ID (ID pass :\n    pass \n"
    },
    {
        "code": "\ndef test_malformed_reference_config(self):\n    ret = parser._config_is_well_formed(self.malformed_reference_conf)\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 48,
            "fix_type": "delete",
            "id": 17325
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .import ID (ID )\n"
    },
    {
        "code": "\ndef test_not_builtin_metric(self):\n    ret = parser._config_is_well_formed(self.missing_metric_name)\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17326
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID -:\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_bad_plot_config(self):\n    ret = parser._config_is_well_formed(self.missing_metric_name)\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17327
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID None ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_bad_subregion_type(self):\n    ret = parser._config_is_well_formed(self.bad_subregion_type)\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17328
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (raise ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_bad_subregion_length(self):\n    ret = parser._config_is_well_formed(self.bad_subregion_length)\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 39,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17329
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )except ID .ID (ID )\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    binary_config = \"\"\"\n            metrics:\n                - Bias\n                - StdDevRatio\n        \"\"\"\n    unary_config = \"\"\"\n            metrics:\n                - TemporalStdDev\n        \"\"\"\n    self.unary_conf = yaml.load(unary_config)\n    self.binary_conf = yaml.load(binary_config)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 68,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17330
        },
        "correct_code": "@ID \ndef ID (ID ):\n    ID =LIT \n    ID =LIT \n    ID .ID =ID .ID (ID )\n    ID .ID =ID .ID (ID )\n",
        "wrong_code": "@ID \ndef ID (ID ):\n    ID =LIT \n    ID =LIT \n    ID .ID =ID .ID (ID \n    ID .ID =ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_contains_binary_metric(self):\n    ret = parser._contains_binary_metrics(self.binary_conf['metrics'])\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 62,
            "fix_type": "delete",
            "id": 17331
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID (ID )None \n"
    },
    {
        "code": "\ndef test_does_not_contain_binary_metric(self):\n    ret = parser._contains_binary_metrics(self.unary_conf['metrics'])\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 39,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17332
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [])\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_contains_unary_metric(self):\n    ret = parser._contains_unary_metrics(self.unary_conf['metrics'])\n    self.assertTrue(ret)\n    \n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 50,
            "fix_type": "delete",
            "id": 17333
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID (ID )\n\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ,ID .ID (ID )\n\n"
    },
    {
        "code": "def test_does_not_contain_unary_metric(self):\n    ret = parser._contains_unary_metrics(self.binary_conf['metrics'])\n    self.assertFalse(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 56,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17334
        },
        "correct_code": "def ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID (ID )\n",
        "wrong_code": "def ID (ID ):\n    ID =ID .ID (ID .ID [LIT ])\n    ID .ID ID )\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    example_config_yaml = \"\"\"\n            - file_count: 1\n              path: /a/fake/path\n              variable: pr\n\n            - data_source: invalid_location_identifier\n        \"\"\"\n    conf = yaml.load(example_config_yaml)\n    self.missing_data_source = conf[0]\n    self.invalid_data_source = conf[1]\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 38,
            "fix_type": "modify",
            "fix_token": "=",
            "id": 17335
        },
        "correct_code": "@ID \ndef ID (ID ):\n    ID =LIT \n    ID =ID .ID (ID )\n    ID .ID =ID [LIT ]\n    ID .ID =ID [LIT ]\n",
        "wrong_code": "@ID \ndef ID (ID ):\n    ID =LIT \n    ID !ID .ID (ID )\n    ID .ID =ID [LIT ]\n    ID .ID =ID [LIT ]\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_missing_data_source_config(self, mock_logger):\n    parser._valid_dataset_config_data(self.missing_data_source)\n    mock_logger.error.assert_called_with(\n        'Dataset does not contain a data_source attribute.'\n    )\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 50,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17336
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID .ID )\n    ID .ID .ID (\n    LIT \n    )\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID .ID )ID .ID .ID (\n    LIT \n    )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_data_source(self, mock_logger):\n    parser._valid_dataset_config_data(self.invalid_data_source)\n    mock_logger.error.assert_called_with(\n        'Dataset does not contain a valid data_source location.'\n    )\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 72,
            "fix_type": "delete",
            "id": 17337
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID .ID )\n    ID .ID .ID (\n    LIT \n    )\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID .ID )\n    ID .ID .ID (\n    del LIT \n    )\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17338
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \ndef ID (ID ):\n    pass \n="
    },
    {
        "code": "\ndef test_valid_local_config_single_file(self):\n    ret = parser._valid_dataset_config_data(self.valid_local_single)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 39,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17339
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_valid_local_config_multi_file(self):\n    ret = parser._valid_dataset_config_data(self.valid_local_multi)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 48,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17340
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .raise (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_local_config(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17341
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):pass \n    pass \n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_local_config_multi_file(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 11,
            "fix_type": "delete",
            "id": 17342
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID (LIT ),\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_local_config_multi_file_missing_file_glob(self, mock_logger):\n    # We can't check for the file_glob_pattern pattern until after we have\n    # verified that the single local file config has been met.\n    parser._valid_dataset_config_data(self.invalid_local_multi_file_glob)\n\n    mock_logger.error.assert_called_with(\n        'Multi-file local dataset is missing key: file_glob_pattern'\n    )\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 54,
            "fix_type": "delete",
            "id": 17343
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n#COMMENT\n\n#COMMENT\n\n    ID .ID (ID .ID )\n\n    ID .ID .ID (\n    LIT \n    )\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n#COMMENT\n\n#COMMENT\n\n    :ID .ID (ID .ID )\n\n    ID .ID .ID (\n    LIT \n    )\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17344
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \ndef ID ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_valid_rcmed_config(self):\n    ret = parser._valid_dataset_config_data(self.valid_rcmed)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17345
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ,:\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_rcmed_config(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 12,
            "fix_type": "delete",
            "id": 17346
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID (LIT )\nas def ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17347
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "class @ID \ndef ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_valid_esgf_conf(self):\n    ret = parser._valid_dataset_config_data(self.valid_esgf)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 44,
            "fix_type": "delete",
            "id": 17348
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    import ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_esgf_conf(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17349
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID LIT )\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    self.invalid_dap = conf[1]\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17350
        },
        "correct_code": "@ID \ndef ID (ID ):\n    ID .ID =ID [LIT ]\n",
        "wrong_code": "break @ID \ndef ID (ID ):\n    ID .ID =ID [LIT ]\n"
    },
    {
        "code": "\ndef test_valid_dap_config(self):\n    ret = parser._valid_dataset_config_data(self.valid_dap)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 1,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17351
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\nin ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_dap_config(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 31,
            "fix_type": "insert",
            "fix_token": "pass",
            "id": 17352
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n\n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 13,
            "fix_type": "delete",
            "id": 17353
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \ndef ID (,ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_valid_contour(self):\n    ret = parser._valid_plot_config_data(self.valid_contour)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 26,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17354
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID ID (ID .ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_missing_keys_contour(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 2,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17355
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@with (LIT )\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 5,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17356
        },
        "correct_code": "@ID \ndef ID (ID ):\n    pass \n",
        "wrong_code": "@ID \nglobal ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_valid_subregion(self):\n    ret = parser._valid_plot_config_data(self.valid_subregion)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 52,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17357
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (assert )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_missing_keys_subregion(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 5,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17358
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\n@ID elif LIT )\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "@classmethod\ndef setUpClass(self):\n    self.missing_subregions = yaml.load(missing_subregions_for_plot_type)\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 27,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17359
        },
        "correct_code": "@ID \ndef ID (ID ):\n    ID .ID =ID .ID (ID )\n",
        "wrong_code": "@ID \ndef ID (ID ):\n    ID .raise =ID .ID (ID )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_invalid_plot_type(self, mock_logger):\n    ret = parser._valid_plot_config_data(self.bad_plot_type)\n    self.assertFalse(ret)\n\n    mock_logger.error.assert_called_with(\n        'Invalid plot type specified.'\n    )\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 85,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17360
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n\n    ID .ID .ID (\n    LIT \n    )\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID =ID .ID (ID .ID )\n    ID .ID (ID )\n\n    ID .ID .await (\n    LIT \n    )\n"
    },
    {
        "code": "\n@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_missing_plot_type(self, mock_logger):\n    self.assertFalse(ret)\n\n    mock_logger.error.assert_called_with(\n        'Plot config does not include a type attribute.'\n    )\n    \n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 73,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17361
        },
        "correct_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID )\n\n    ID .ID .ID (\n    LIT \n    )\n\n",
        "wrong_code": "\n@ID (LIT )\ndef ID (ID ,ID ):\n    ID .ID (ID )\n\n    ID .ID .ID (\n    LIT LIT )\n\n"
    },
    {
        "code": "@patch('ocw_config_runner.configuration_parsing.logger')\ndef test_missing_subregion(self, mock_logger):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/climate/ocw_config_runner/tests/test_config_parsing.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17362
        },
        "correct_code": "@ID (LIT )\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "@ID (LIT ==)\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\n\ndef enable_debug(fo):\n    LoggingHTTPConnection.log = fo\n    Connection.conn_classes = (LoggingHTTPConnection,\n                               LoggingHTTPSConnection)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/__init__.py",
            "fix_location": 58,
            "fix_type": "delete",
            "id": 17363
        },
        "correct_code": "\n\ndef ID (ID ):\n    ID .ID =ID \n    ID .ID =(ID ,\n    ID )\n",
        "wrong_code": "\n\ndef ID (ID ):\n    ID .ID =ID \n    ID .ID =(ID ,\n    ID )for \n"
    },
    {
        "code": "\ndef __init__(self, response, connection):\n    if not self.success():\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 43,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17364
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    if not ID .ID ():\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n    if not ID .ID ()\n        pass \n"
    },
    {
        "code": "\ndef parse_body_and_errors(self):\n    if 'message' in js:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 47,
            "fix_type": "delete",
            "id": 17365
        },
        "correct_code": "\ndef ID (ID ):\n    if LIT in ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    if LIT in ID :\n        pass .\n    else :\n        pass \n"
    },
    {
        "code": "\ndef success(self):\n    return len(self.errors) == 0\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 44,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17366
        },
        "correct_code": "\ndef ID (ID ):\n    return ID (ID .ID )==LIT \n",
        "wrong_code": "\ndef ID (ID ):\n    return ID (ID .ID )==LIT nonlocal "
    },
    {
        "code": "\ndef add_default_headers(self, headers):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 33,
            "fix_type": "modify",
            "fix_token": "",
            "id": 17367
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    pass \n    nonlocal "
    },
    {
        "code": "\ndef __init__(self, code, message):\n    self.code = code\n    self.message = message\n    self.args = (code, message)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 68,
            "fix_type": "delete",
            "id": 17368
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    ID .ID =ID \n    ID .ID =ID \n    ID .ID =(ID ,ID )\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n    ID .ID =ID \n    ID .ID =ID \n    ID .ID =(try ID ,ID )\n"
    },
    {
        "code": "\ndef __str__(self):\n    return \"%s %s\" % (self.code, self.message)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 34,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17369
        },
        "correct_code": "\ndef ID (ID ):\n    return LIT %(ID .ID ,ID .ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    return LIT %(ID !ID ,ID .ID )\n"
    },
    {
        "code": "\ndef __repr__(self):\n    return \"Luadns %s %s\" % (self.code, self.message)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/common/luadns.py",
            "fix_location": 36,
            "fix_type": "delete",
            "id": 17370
        },
        "correct_code": "\ndef ID (ID ):\n    return LIT %(ID .ID ,ID .ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    return LIT %(ID .break ID ,ID .ID )\n"
    },
    {
        "code": "def __str__(self):\n    return self.args[0]\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 13,
            "fix_type": "delete",
            "id": 17371
        },
        "correct_code": "def ID (ID ):\n    return ID .ID [LIT ]\n",
        "wrong_code": "def ID (ID ):=\n    return ID .ID [LIT ]\n"
    },
    {
        "code": "\ndef __repr__(self):\n    return \"<CloudSigmaException '%s'>\" % (self.args[0])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 46,
            "fix_type": "delete",
            "id": 17372
        },
        "correct_code": "\ndef ID (ID ):\n    return LIT %(ID .ID [LIT ])\n",
        "wrong_code": "\ndef ID (ID ):\n    return LIT %(ID .ID [LIT ])*\n"
    },
    {
        "code": "def __repr__(self):\n    return \"<CloudSigmaInsufficientFundsException '%s'>\" % (self.args[0])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 43,
            "fix_type": "insert",
            "fix_token": "]",
            "id": 17373
        },
        "correct_code": "def ID (ID ):\n    return LIT %(ID .ID [LIT ])\n",
        "wrong_code": "def ID (ID ):\n    return LIT %(ID .ID [LIT )\n"
    },
    {
        "code": "def __init__(self, id, name, cpu, ram, disk, bandwidth, price, driver):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 28,
            "fix_type": "delete",
            "id": 17374
        },
        "correct_code": "def ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "def ID (ID ,ID ,ID ,ID ,ID ,from ID ,ID ,ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef __repr__(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17375
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\nfor def ID (ID ):\n    pass \n"
    },
    {
        "code": "def success(self):\n    if self.status == httplib.UNAUTHORIZED:\n        raise InvalidCredsError()\n\n    return self.status >= 200 and self.status <= 299\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 28,
            "fix_type": "insert",
            "fix_token": "==",
            "id": 17376
        },
        "correct_code": "def ID (ID ):\n    if ID .ID ==ID .ID :\n        raise ID ()\n\n    return ID .ID >=LIT and ID .ID <=LIT \n",
        "wrong_code": "def ID (ID ):\n    if ID .ID ID .ID :\n        raise ID ()\n\n    return ID .ID >=LIT and ID .ID <=LIT \n"
    },
    {
        "code": "\ndef parse_body(self):\n    if not self.body:\n        return self.body\n\n    return str2dicts(self.body)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 74,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17377
        },
        "correct_code": "\ndef ID (ID ):\n    if not ID .ID :\n        return ID .ID \n\n    return ID (ID .ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    if not ID .ID :\n        return ID .ID \n\n    return ID (yield .ID )\n"
    },
    {
        "code": "\ndef parse_error(self):\n    return 'Error: %s' % (self.body.replace('errors:', '').strip())\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 54,
            "fix_type": "delete",
            "id": 17378
        },
        "correct_code": "\ndef ID (ID ):\n    return LIT %(ID .ID .ID (LIT ,LIT ).ID ())\n",
        "wrong_code": "\ndef ID (ID ):\n    return LIT %(ID .ID .ID (LIT ,LIT )await .ID ())\n"
    },
    {
        "code": "\ndef add_default_headers(self, headers):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 5,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17379
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef __init__(self, key, secret=None, secure=True, host=None, port=None,\n             region=DEFAULT_REGION, **kwargs):\n    if region not in API_ENDPOINTS_1_0:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 1,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17380
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ,ID =LIT ,ID =ID ,ID =ID ,\nID =ID ,**ID ):\n    if ID not in ID :\n        pass \n",
        "wrong_code": "\nlambda ID (ID ,ID ,ID =ID ,ID =LIT ,ID =ID ,ID =ID ,\nID =ID ,**ID ):\n    if ID not in ID :\n        pass \n"
    },
    {
        "code": "\ndef reboot_node(self, node):\n\n    if state == NodeState.RUNNING:\n        pass\n    else:\n        pass\n\n    if not stopped:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 24,
            "fix_type": "modify",
            "fix_token": "if",
            "id": 17381
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    if ID ==ID .ID :\n        pass \n    else :\n        pass \n\n    if not ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n\n    as ID ==ID .ID :\n        pass \n    else :\n        pass \n\n    if not ID :\n        pass \n"
    },
    {
        "code": "\ndef destroy_node(self, node):\n\n    # Node cannot be destroyed while running so it must be stopped first\n    if state == NodeState.RUNNING:\n        pass\n    else:\n        pass\n\n    if not stopped:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 64,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17382
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n#COMMENT\n\n    if ID ==ID .ID :\n        pass \n    else :\n        pass \n\n    if not ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n\n#COMMENT\n\n    if ID ==ID .ID :\n        pass except else :\n        pass \n\n    if not ID :\n        pass \n"
    },
    {
        "code": "\ndef list_images(self, location=None):\n    for value in response:\n        if value.get('type'):\n            if value['type'] == 'disk':\n                pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 26,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17383
        },
        "correct_code": "\ndef ID (ID ,ID =ID ):\n    for ID in ID :\n        if ID .ID (LIT ):\n            if ID [LIT ]==LIT :\n                pass \n",
        "wrong_code": "\ndef ID (ID ,ID =ID ):    for ID in ID :\n        if ID .ID (LIT ):\n            if ID [LIT ]==LIT :\n                pass \n"
    },
    {
        "code": "\ndef list_sizes(self, location=None):\n    for value in INSTANCE_TYPES:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 31,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17384
        },
        "correct_code": "\ndef ID (ID ,ID =ID ):\n    for ID in ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID =ID ):\n    for in ID :\n        pass \n"
    },
    {
        "code": "\ndef list_nodes(self):\n    for data in response:\n        if node:\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 38,
            "fix_type": "delete",
            "id": 17385
        },
        "correct_code": "\ndef ID (ID ):\n    for ID in ID :\n        if ID :\n            pass \n",
        "wrong_code": "\ndef ID (ID ):\n    for ID in ID :\n    from if ID :\n            pass \n"
    },
    {
        "code": "\ndef ex_static_ip_list(self):\n\n    if response.status != 200:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 23,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17386
        },
        "correct_code": "\ndef ID (ID ):\n\n    if ID .ID !=LIT :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n\n    if async .ID !=LIT :\n        pass \n"
    },
    {
        "code": "\ndef ex_drives_list(self):\n    \"\"\"\n        Return a list of all the available drives.\n\n        :rtype: ``list`` of ``dict``\n        \"\"\"\n    response = self.connection.request(action='/drives/info', method='GET')\n\n    result = str2dicts(response.body)\n    return result\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 48,
            "fix_type": "modify",
            "fix_token": "LIT",
            "id": 17387
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID =ID .ID .ID (ID =LIT ,ID =LIT )\n\n    ID =ID (ID .ID )\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID =ID .ID .ID (ID =(,ID =LIT )\n\n    ID =ID (ID .ID )\n    return ID \n"
    },
    {
        "code": "\ndef ex_static_ip_create(self):\n    \"\"\"\n        Create a new static IP address.p\n\n        :rtype: ``list`` of ``dict``\n        \"\"\"\n    response = self.connection.request(action='/resources/ip/create',\n                                       method='GET')\n\n    result = str2dicts(response.body)\n    return result\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 89,
            "fix_type": "delete",
            "id": 17388
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID =ID .ID .ID (ID =LIT ,\n    ID =LIT )\n\n    ID =ID (ID .ID )\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID =ID .ID .ID (ID =LIT ,\n    ID =LIT )\n\n    ID =ID (ID .ID )!\n    return ID \n"
    },
    {
        "code": "\ndef ex_static_ip_destroy(self, ip_address):\n    \"\"\"\n        Destroy a static IP address.\n\n        :param      ip_address: IP address which should be used\n        :type       ip_address: ``str``\n\n        :rtype: ``bool``\n        \"\"\"\n    response = self.connection.request(\n        action='/resources/ip/%s/destroy' % (ip_address), method='GET')\n\n    return response.status == 204\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17389
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),ID =LIT )\n\n    return ID .ID ==LIT \n",
        "wrong_code": "\nif def ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),ID =LIT )\n\n    return ID .ID ==LIT \n"
    },
    {
        "code": "\ndef ex_drive_destroy(self, drive_uuid):\n    \"\"\"\n        Destroy a drive with a specified uuid.\n        If the drive is currently mounted an exception is thrown.\n\n        :param      drive_uuid: Drive uuid which should be used\n        :type       drive_uuid: ``str``\n\n        :rtype: ``bool``\n        \"\"\"\n    response = self.connection.request(\n        action='/drives/%s/destroy' % (drive_uuid), method='POST')\n\n    return response.status == 204\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 77,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17390
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),ID =LIT )\n\n    return ID .ID ==LIT \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),ID =LIT )/\n    return ID .ID ==LIT \n"
    },
    {
        "code": "\ndef ex_start_node(self, node):\n    \"\"\"\n        Start a node.\n\n        :param      node: Node which should be used\n        :type       node: :class:`libcloud.compute.base.Node`\n\n        :rtype: ``bool``\n        \"\"\"\n    response = self.connection.request(\n        action='/servers/%s/start' % (node.id),\n        method='POST')\n\n    return response.status == 200\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 12,
            "fix_type": "delete",
            "id": 17391
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ),\n    ID =LIT )\n\n    return ID .ID ==LIT \n",
        "wrong_code": "\ndef ID (ID in ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ),\n    ID =LIT )\n\n    return ID .ID ==LIT \n"
    },
    {
        "code": "\ndef ex_stop_node(self, node):\n    \"\"\"\n        Stop (shutdown) a node.\n\n        :param      node: Node which should be used\n        :type       node: :class:`libcloud.compute.base.Node`\n\n        :rtype: ``bool``\n        \"\"\"\n    response = self.connection.request(\n        action='/servers/%s/stop' % (node.id),\n        method='POST')\n    return response.status == 204\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 105,
            "fix_type": "delete",
            "id": 17392
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ),\n    ID =LIT )\n    return ID .ID ==LIT \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ),\n    ID =LIT )\n    return ID .ID ID ==LIT \n"
    },
    {
        "code": "\ndef ex_shutdown_node(self, node):\n    \"\"\"\n        Stop (shutdown) a node.\n\n        @inherits: :class:`CloudSigmaBaseNodeDriver.ex_stop_node`\n        \"\"\"\n    return self.ex_stop_node(node)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 1,
            "fix_type": "delete",
            "id": 17393
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    return ID .ID (ID )\n",
        "wrong_code": "\ncontinue def ID (ID ,ID ):\n    LIT \n    return ID .ID (ID )\n"
    },
    {
        "code": "\ndef ex_destroy_drive(self, drive_uuid):\n    \"\"\"\n        Destroy a drive.\n\n        :param      drive_uuid: Drive uuid which should be used\n        :type       drive_uuid: ``str``\n\n        :rtype: ``bool``\n        \"\"\"\n    response = self.connection.request(\n        action='/drives/%s/destroy' % (drive_uuid),\n        method='POST')\n    return response.status == 204\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 87,
            "fix_type": "modify",
            "fix_token": "return",
            "id": 17394
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),\n    ID =LIT )\n    return ID .ID ==LIT \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    LIT \n    ID =ID .ID .ID (\n    ID =LIT %(ID ),\n    ID =LIT )\n    LIT ID .ID ==LIT \n"
    },
    {
        "code": "\ndef _ex_connection_class_kwargs(self):\n    \"\"\"\n        Return the host value based on the user supplied region.\n        \"\"\"\n    kwargs = {}\n    if not self._host_argument_set:\n        kwargs['host'] = API_ENDPOINTS_1_0[self.region]['host']\n\n    return kwargs\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 84,
            "fix_type": "delete",
            "id": 17395
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID ={}\n    if not ID .ID :\n        ID [LIT ]=ID [ID .ID ][LIT ]\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID ={}\n    if not ID .ID :\n        ID [LIT ]=ID [ID .ID *][LIT ]\n\n    return ID \n"
    },
    {
        "code": "\ndef _get_node(self, node_id):\n\n    if not node:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 34,
            "fix_type": "delete",
            "id": 17396
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    if not ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n\n    if not ID assert :\n        pass \n"
    },
    {
        "code": "\ndef _get_node_info(self, node):\n    response = self.connection.request(\n        action='/servers/%s/info' % (node.id))\n\n    result = str2dicts(response.body)\n    return result[0]\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 1,
            "fix_type": "insert",
            "fix_token": "def",
            "id": 17397
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ))\n\n    ID =ID (ID .ID )\n    return ID [LIT ]\n",
        "wrong_code": "\nID (ID ,ID ):\n    ID =ID .ID .ID (\n    ID =LIT %(ID .ID ))\n\n    ID =ID (ID .ID )\n    return ID [LIT ]\n"
    },
    {
        "code": "\ndef __init__(self, http_code, error_type, error_msg, error_point, driver):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17398
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID [ID ,ID ,ID ,ID ,ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef __init__(self, id, resource, amount, period, status, price, start_time,\n             end_time, auto_renew, subscribed_object=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 12,
            "fix_type": "delete",
            "id": 17399
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,\nID ,ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID raise ,ID ,ID ,ID ,ID ,ID ,ID ,ID ,\nID ,ID ,ID =ID ):\n    pass \n"
    },
    {
        "code": "\ndef __str__(self):\n    return self.__repr__()\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 34,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17400
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID ()\n",
        "wrong_code": "\ndef ID (ID ):\n    return ID .ID (\n"
    },
    {
        "code": "\ndef __init__(self, id, name, resources=None):\n    \"\"\"\n        :param id: Tag ID.\n        :type id: ``str``\n\n        :param name: Tag name.\n        :type name: ``str``\n\n        :param resource: IDs of resources which are associated with this tag.\n        :type resources: ``list`` of ``str``\n        \"\"\"\n    self.id = id\n    self.name = name\n    self.resources = resources if resources else []\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 68,
            "fix_type": "delete",
            "id": 17401
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID =ID ):\n    LIT \n    ID .ID =ID \n    ID .ID =ID \n    ID .ID =ID if ID else []\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID =ID ):\n    LIT \n    ID .ID =ID \n    ID .ID =del ID \n    ID .ID =ID if ID else []\n"
    },
    {
        "code": "\ndef __str__(self):\n    return self.__repr__()\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 29,
            "fix_type": "modify",
            "fix_token": ".",
            "id": 17402
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID ()\n",
        "wrong_code": "\ndef ID (ID ):\n    return ID with ID ()\n"
    },
    {
        "code": "\ndef __repr__(self):\n    return ('<CloudSigmaTag id=%s, name=%s, resources=%s>' %\n            (self.id, self.name, repr(self.resources)))\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 66,
            "fix_type": "delete",
            "id": 17403
        },
        "correct_code": "\ndef ID (ID ):\n    return (LIT %\n    (ID .ID ,ID .ID ,ID (ID .ID )))\n",
        "wrong_code": "\ndef ID (ID ):\n    return (LIT %\n    (ID .ID ,ID .ID ,ID (ID .ID ).))\n"
    },
    {
        "code": "\ndef __init__(self, id, name, size, media, status, driver, extra=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 17,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17404
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID ,ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,==,ID ,ID ,ID ,ID ,ID =ID ):\n    pass \n"
    },
    {
        "code": "\ndef __str__(self):\n    return self.__repr__()\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 34,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17405
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID ()\n",
        "wrong_code": "\ndef ID (ID ):\n    return ID .ID (\n"
    },
    {
        "code": "\ndef __init__(self, id, name, rules):\n    \"\"\"\n        :param id: Policy ID.\n        :type id: ``str``\n\n        :param name: Policy name.\n        :type name: ``str``\n\n        :param rules: Rules associated with this policy.\n        :type rules: ``list`` of :class:`.CloudSigmaFirewallPolicyRule` objects\n        \"\"\"\n    self.id = id\n    self.name = name\n    self.rules = rules if rules else []\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 30,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17406
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ):\n    LIT \n    ID .ID =ID \n    ID .ID =ID \n    ID .ID =ID if ID else []\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ):    LIT \n    ID .ID =ID \n    ID .ID =ID \n    ID .ID =ID if ID else []\n"
    },
    {
        "code": "\ndef __str__(self):\n    return self.__repr__()\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 5,
            "fix_type": "delete",
            "id": 17407
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID ()\n",
        "wrong_code": "\ndef -ID (ID ):\n    return ID .ID ()\n"
    },
    {
        "code": "\ndef __repr__(self):\n    return (('<CloudSigmaFirewallPolicy id=%s, name=%s rules=%s>') %\n            (self.id, self.name, repr(self.rules)))\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 40,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17408
        },
        "correct_code": "\ndef ID (ID ):\n    return ((LIT )%\n    (ID .ID ,ID .ID ,ID (ID .ID )))\n",
        "wrong_code": "\ndef ID (ID ):\n    return ((LIT )%\n    (.ID ,ID .ID ,ID (ID .ID )))\n"
    },
    {
        "code": "\ndef __init__(self, action, direction, ip_proto=None, src_ip=None,\n             src_port=None, dst_ip=None, dst_port=None, comment=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 24,
            "fix_type": "insert",
            "fix_token": "=",
            "id": 17409
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID =ID ,ID =ID ,\nID =ID ,ID =ID ,ID =ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ID ,ID =ID ,\nID =ID ,ID =ID ,ID =ID ,ID =ID ):\n    pass \n"
    },
    {
        "code": "\ndef __str__(self):\n    return self.__repr__()\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17410
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID ()\n",
        "wrong_code": "\ndef ID (ID ):\n    return ID pass .ID ()\n"
    },
    {
        "code": "\ndef __repr__(self):\n    return (('<CloudSigmaFirewallPolicyRule action=%s, direction=%s>') %\n            (self.action, self.direction))\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 14,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17411
        },
        "correct_code": "\ndef ID (ID ):\n    return ((LIT )%\n    (ID .ID ,ID .ID ))\n",
        "wrong_code": "\ndef ID (ID ):ID     return ((LIT )%\n    (ID .ID ,ID .ID ))\n"
    },
    {
        "code": "\ndef success(self):\n    return self.status in self.success_status_codes\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 40,
            "fix_type": "delete",
            "id": 17412
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID in ID .ID \n",
        "wrong_code": "\ndef ID (ID ):\n    return ID .ID in ID .LIT ID \n"
    },
    {
        "code": "\ndef parse_error(self):\n    if int(self.status) == httplib.UNAUTHORIZED:\n        pass\n\n    if errors:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 34,
            "fix_type": "modify",
            "fix_token": "==",
            "id": 17413
        },
        "correct_code": "\ndef ID (ID ):\n    if ID (ID .ID )==ID .ID :\n        pass \n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    if ID (ID .ID )not ID .ID :\n        pass \n\n    if ID :\n        pass \n"
    },
    {
        "code": "\ndef _parse_errors_from_body(self, body):\n\n    if not isinstance(body, list):\n        pass\n\n    for item in body:\n        if 'error_type' not in item:\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17414
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    if not ID (ID ,ID ):\n        pass \n\n    for ID in ID :\n        if LIT not in ID :\n            pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n\n    if None not ID (ID ,ID ):\n        pass \n\n    for ID in ID :\n        if LIT not in ID :\n            pass \n"
    },
    {
        "code": "\ndef add_default_headers(self, headers):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 8,
            "fix_type": "delete",
            "id": 17415
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID async (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef encode_data(self, data):\n    data = json.dumps(data)\n    return data\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 39,
            "fix_type": "delete",
            "id": 17416
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID =ID .ID (ID )\n    return ID \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    ID =ID .ID (ID )with \n    return ID \n"
    },
    {
        "code": "\ndef request(self, action, params=None, data=None, headers=None,\n            method='GET', raw=False):\n\n    if method == 'GET':\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 46,
            "fix_type": "delete",
            "id": 17417
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ,ID =ID ,\nID =LIT ,ID =LIT ):\n\n    if ID ==LIT :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ,ID =ID ,\nID =[LIT ,ID =LIT ):\n\n    if ID ==LIT :\n        pass \n"
    },
    {
        "code": "\ndef list_nodes(self, ex_tag=None):\n    if ex_tag:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 64,
            "fix_type": "delete",
            "id": 17418
        },
        "correct_code": "\ndef ID (ID ,ID =ID ):\n    if ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID =ID ):\n    if ID :\n        pass \n    else :\n    raise pass \n"
    },
    {
        "code": "\ndef list_sizes(self):\n    for value in INSTANCE_TYPES:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 23,
            "fix_type": "delete",
            "id": 17419
        },
        "correct_code": "\ndef ID (ID ):\n    for ID in ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    for .ID in ID :\n        pass \n"
    },
    {
        "code": "\ndef list_images(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17420
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "pass def ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef destroy_node(self, node):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17421
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": ")\ndef ID (ID ,ID ):\n    pass \n"
    },
    {
        "code": "\n# Server extension methods\n\ndef ex_edit_node(self, node, params):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 20,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17422
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID (=,ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef ex_start_node(self, node, ex_avoid=None):\n\n    if ex_avoid:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 5,
            "fix_type": "delete",
            "id": 17423
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ):\n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ==ID (ID ,ID ,ID =ID ):\n\n    if ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_stop_node(self, node):\n    return response.status == httplib.ACCEPTED\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17424
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID .ID ==ID .ID \n",
        "wrong_code": "\ndef ID ID ,ID ):\n    return ID .ID ==ID .ID \n"
    },
    {
        "code": "\ndef ex_clone_node(self, node, name=None, random_vnc_password=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17425
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (break ID ,ID ,ID =ID ,ID =ID ):\n    pass \n"
    },
    {
        "code": "\ndef ex_open_vnc_tunnel(self, node):\n    return vnc_url\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 16,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17426
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID \n",
        "wrong_code": "\ndef ID (ID ,ID *:\n    return ID \n"
    },
    {
        "code": "\ndef ex_close_vnc_tunnel(self, node):\n    return response.status == httplib.ACCEPTED\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 16,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17427
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID .ID ==ID .ID \n",
        "wrong_code": "\ndef ID (ID ,ID lambda :\n    return ID .ID ==ID .ID \n"
    },
    {
        "code": "\n# Drive extension methods\n\ndef ex_list_library_drives(self):\n    return drives\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 19,
            "fix_type": "delete",
            "id": 17428
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    return ID \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID assert (ID ):\n    return ID \n"
    },
    {
        "code": "\ndef ex_create_drive(self, name, size, media='disk', ex_avoid=None):\n\n    if ex_avoid:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 30,
            "fix_type": "delete",
            "id": 17429
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID =LIT ,ID =ID ):\n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID =LIT ,import ID =ID ):\n\n    if ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_clone_drive(self, drive, name=None, ex_avoid=None):\n\n    if ex_avoid:\n        pass\n\n    if name:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 70,
            "fix_type": "delete",
            "id": 17430
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ):\n\n    if ID :\n        pass \n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ):\n\n    if ID :\n        pass \n\n    if ,ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_resize_drive(self, drive, size):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 27,
            "fix_type": "delete",
            "id": 17431
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n    else pass \n"
    },
    {
        "code": "\ndef ex_attach_drive(self, node):\n    \"\"\"\n        Attach a drive to the provided node.\n        \"\"\"\n    # TODO\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17432
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    #COMMENT\n\n    pass \n",
        "wrong_code": "\ndef ID async ID ,ID ):\n    LIT \n    #COMMENT\n\n    pass \n"
    },
    {
        "code": "\ndef ex_get_drive(self, drive_id):\n    response = self.connection.request(action=action).object\n    drive = self._to_drive(data=response)\n    return drive\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 22,
            "fix_type": "insert",
            "fix_token": "\n",
            "id": 17433
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID =ID .ID .ID (ID =ID ).ID \n    ID =ID .ID (ID =ID )\n    return ID \n",
        "wrong_code": "\ndef ID (ID ,ID ):    ID =ID .ID .ID (ID =ID ).ID \n    ID =ID .ID (ID =ID )\n    return ID \n"
    },
    {
        "code": "\n# Firewall policies extension methods\n\ndef ex_list_firewall_policies(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 10,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17434
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n#COMMENT\n)\ndef ID (ID ):\n    pass \n"
    },
    {
        "code": "\ndef ex_create_firewall_policy(self, name, rules=None):\n\n    if rules:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 53,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17435
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ):\n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID =ID ):\n\n    if ID :\n        pass async "
    },
    {
        "code": "\n# Availability groups extension methods\n\ndef ex_list_servers_availability_groups(self):\n    \"\"\"\n        Return which running servers share the same physical compute host.\n\n        :return: A list of server UUIDs which share the same physical compute\n                 host. Servers which share the same host will be stored under\n                 the same list index.\n        :rtype: ``list`` of ``list``\n        \"\"\"\n    action = '/servers/availability_groups/'\n    response = self.connection.request(action=action, method='GET')\n    return response.object\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 63,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17436
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID ID (ID =ID ,ID =LIT )\n    return ID .ID \n"
    },
    {
        "code": "\ndef ex_list_drives_availability_groups(self):\n    \"\"\"\n        Return which drives share the same physical storage host.\n\n        :return: A list of drive UUIDs which share the same physical storage\n                 host. Drives which share the same host will be stored under\n                 the same list index.\n        :rtype: ``list`` of ``list``\n        \"\"\"\n    action = '/drives/availability_groups/'\n    response = self.connection.request(action=action, method='GET')\n    return response.object\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 13,
            "fix_type": "delete",
            "id": 17437
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n",
        "wrong_code": "\ndef ID (ID )try :\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n"
    },
    {
        "code": "\n# Tag extension methods\n\ndef ex_list_tags(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 25,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17438
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID (ID ):!    pass \n"
    },
    {
        "code": "\ndef ex_get_tag(self, tag_id):\n    return tag\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 9,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17439
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID \n",
        "wrong_code": "\ndef ID (,ID ):\n    return ID \n"
    },
    {
        "code": "\ndef ex_create_tag(self, name, resource_uuids=None):\n\n    if resource_uuids:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 13,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17440
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ):\n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,,ID =ID ):\n\n    if ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_tag_resource(self, resource, tag):\n    if not hasattr(resource, 'id'):\n        pass\n\n    return self.ex_tag_resources(resources=[resource], tag=tag)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 22,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17441
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    if not ID (ID ,LIT ):\n        pass \n\n    return ID .ID (ID =[ID ],ID =ID )\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):!    if not ID (ID ,LIT ):\n        pass \n\n    return ID .ID (ID =[ID ],ID =ID )\n"
    },
    {
        "code": "\ndef ex_tag_resources(self, resources, tag):\n\n    for resource in resources:\n        if not hasattr(resource, 'id'):\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 47,
            "fix_type": "delete",
            "id": 17442
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n\n    for ID in ID :\n        if not ID (ID ,LIT ):\n            pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n\n    for ID in ID :\n    as if not ID (ID ,LIT ):\n            pass \n"
    },
    {
        "code": "\ndef ex_delete_tag(self, tag):\n    action = '/tags/%s/' % (tag.id)\n    response = self.connection.request(action=action, method='DELETE')\n    return response.status == httplib.NO_CONTENT\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 57,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17443
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    ID =LIT %(ID .ID )\n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID ==ID .ID \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    ID =LIT %(ID .ID )\n    ID =ID .ID ID (ID =ID ,ID =LIT )\n    return ID .ID ==ID .ID \n"
    },
    {
        "code": "\n# Account extension methods\n\ndef ex_get_balance(self):\n    \"\"\"\n        Retrieve account balance information.\n\n        :return: Dictionary with two items (\"balance\" and \"currency\").\n        :rtype: ``dict``\n        \"\"\"\n    action = '/balance/'\n    response = self.connection.request(action=action, method='GET')\n    return response.object\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 59,
            "fix_type": "delete",
            "id": 17444
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID global .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n"
    },
    {
        "code": "\ndef ex_get_pricing(self):\n    \"\"\"\n        Retrieve pricing information that are applicable to the cloud.\n\n        :return: Dictionary with pricing information.\n        :rtype: ``dict``\n        \"\"\"\n    action = '/pricing/'\n    response = self.connection.request(action=action, method='GET')\n    return response.object\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 12,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17445
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n",
        "wrong_code": "\ndef ID (ID else :\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n"
    },
    {
        "code": "\ndef ex_get_usage(self):\n    \"\"\"\n        Retrieve account current usage information.\n\n        :return: Dictionary with two items (\"balance\" and \"usage\").\n        :rtype: ``dict``\n        \"\"\"\n    action = '/currentusage/'\n    response = self.connection.request(action=action, method='GET')\n    return response.object\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 74,
            "fix_type": "delete",
            "id": 17446
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )\n    return ID .ID \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,ID =LIT )!=\n    return ID .ID \n"
    },
    {
        "code": "\ndef ex_list_subscriptions(self, status='all', resources=None):\n\n    if status:\n        pass\n\n    if resources:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17447
        },
        "correct_code": "\ndef ID (ID ,ID =LIT ,ID =ID ):\n\n    if ID :\n        pass \n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID (=LIT ,ID =ID ):\n\n    if ID :\n        pass \n\n    if ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_toggle_subscription_auto_renew(self, subscription):\n    return response.status == httplib.OK\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 42,
            "fix_type": "insert",
            "fix_token": ".",
            "id": 17448
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID .ID ==ID .ID \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    return ID .ID ==ID ID \n"
    },
    {
        "code": "\ndef ex_create_subscription(self, amount, period, resource,\n                           auto_renew=False):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 8,
            "fix_type": "insert",
            "fix_token": "(",
            "id": 17449
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,\nID =LIT ):\n    pass \n",
        "wrong_code": "\ndef ID ID ,ID ,ID ,ID ,\nID =LIT ):\n    pass \n"
    },
    {
        "code": "\n# Misc extension methods\n\ndef ex_list_capabilities(self):\n    \"\"\"\n        Retrieve all the basic and sensible limits of the API.\n\n        :rtype: ``dict``\n        \"\"\"\n    action = '/capabilities/'\n    response = self.connection.request(action=action,\n                                       method='GET')\n    capabilities = response.object\n    return capabilities\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 47,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17450
        },
        "correct_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT \n    ID =ID .ID .ID (ID =ID ,\n    ID =LIT )\n    ID =ID .ID \n    return ID \n",
        "wrong_code": "\n#COMMENT\n\n\ndef ID (ID ):\n    LIT \n    ID =LIT :ID =ID .ID .ID (ID =ID ,\n    ID =LIT )\n    ID =ID .ID \n    return ID \n"
    },
    {
        "code": "\ndef _to_node(self, data):\n\n    for nic in data['nics']:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 16,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17451
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    for ID in ID [LIT ]:\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID :\n\n    for ID in ID [LIT ]:\n        pass \n"
    },
    {
        "code": "\ndef _to_image(self, data):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 13,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17452
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,!):\n    pass \n"
    },
    {
        "code": "\ndef _to_drive(self, data):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17453
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (raise ID ,ID ):\n    pass \n"
    },
    {
        "code": "\ndef _to_tag(self, data):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 9,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17454
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (,ID ):\n    pass \n"
    },
    {
        "code": "\ndef _to_subscriptions(self, data):\n\n    for item in data['objects']:\n        subscriptions.append(subscription)\n\n    return subscriptions\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17455
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    for ID in ID [LIT ]:\n        ID .ID (ID )\n\n    return ID \n",
        "wrong_code": "nonlocal \ndef ID (ID ,ID ):\n\n    for ID in ID [LIT ]:\n        ID .ID (ID )\n\n    return ID \n"
    },
    {
        "code": "\ndef _to_subscription(self, data):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 29,
            "fix_type": "delete",
            "id": 17456
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    pass \ntry "
    },
    {
        "code": "\ndef _to_firewall_policy(self, data):\n\n    for item in data.get('rules', []):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 50,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17457
        },
        "correct_code": "\ndef ID (ID ,ID ):\n\n    for ID in ID .ID (LIT ,[]):\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n\n    for ID in ID .ID (LIT ,[])\n        pass \n"
    },
    {
        "code": "\ndef _perform_action(self, path, action, method='POST', params=None,\n                    data=None):\n    if params:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 16,
            "fix_type": "delete",
            "id": 17458
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID =LIT ,ID =ID ,\nID =ID ):\n    if ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID pass ,ID ,ID =LIT ,ID =ID ,\nID =ID ):\n    if ID :\n        pass \n    else :\n        pass \n"
    },
    {
        "code": "\ndef _is_installation_cd(self, image):\n    \"\"\"\n        Detect if the provided image is an installation CD.\n\n        :rtype: ``bool``\n        \"\"\"\n    if isinstance(image, CloudSigmaDrive) and image.media == 'cdrom':\n        return True\n\n    return False\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 17,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17459
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    LIT \n    if ID (ID ,ID )and ID .ID ==LIT :\n        return LIT \n\n    return LIT \n",
        "wrong_code": "\ndef ID (ID ,ID )in \n    LIT \n    if ID (ID ,ID )and ID .ID ==LIT :\n        return LIT \n\n    return LIT \n"
    },
    {
        "code": "\ndef _extract_values(self, obj, keys):\n    \"\"\"\n        Extract values from a dictionary and return a new dictionary with\n        extracted values.\n\n        :param obj: Dictionary to extract values from.\n        :type obj: ``dict``\n\n        :param keys: Keys to extract.\n        :type keys: ``list``\n\n        :return: Dictionary with extracted values.\n        :rtype: ``dict``\n        \"\"\"\n    result = {}\n\n    for key in keys:\n        result[key] = obj[key]\n\n    return result\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 94,
            "fix_type": "delete",
            "id": 17460
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    LIT \n    ID ={}\n\n    for ID in ID :\n        ID [ID ]=ID [ID ]\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n    LIT \n    ID ={}\n\n    for ID in ID :\n        ID [ID ]=ID [ID ]\n\n    ==return ID \n"
    },
    {
        "code": "\ndef _ex_connection_class_kwargs(self):\n    \"\"\"\n        Return the host value based on the user supplied region.\n        \"\"\"\n    kwargs = {}\n\n    if not self._host_argument_set:\n        kwargs['host'] = API_ENDPOINTS_2_0[self.region]['host']\n\n    return kwargs\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/compute/drivers/cloudsigma.py",
            "fix_location": 67,
            "fix_type": "modify",
            "fix_token": "[",
            "id": 17461
        },
        "correct_code": "\ndef ID (ID ):\n    LIT \n    ID ={}\n\n    if not ID .ID :\n        ID [LIT ]=ID [ID .ID ][LIT ]\n\n    return ID \n",
        "wrong_code": "\ndef ID (ID ):\n    LIT \n    ID ={}\n\n    if not ID .ID :\n        ID pass LIT ]=ID [ID .ID ][LIT ]\n\n    return ID \n"
    },
    {
        "code": "\ndef pre_connect_hook(self, params, headers):\n\n    for k, v in auth.items():\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 66,
            "fix_type": "delete",
            "id": 17462
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n\n    for ID ,ID in ID .ID ():\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n\n    for ID ,ID in ID .ID ():\n        pass *\n"
    },
    {
        "code": "\ndef _get_aws_auth_b64(self, secret_key, time_string):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 21,
            "fix_type": "modify",
            "fix_token": ":",
            "id": 17463
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ).\n    pass \n"
    },
    {
        "code": "\ndef iterate_zones(self):\n    return self._get_more('zones')\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17464
        },
        "correct_code": "\ndef ID (ID ):\n    return ID .ID (LIT )\n",
        "wrong_code": "\ndef ID (=ID ):\n    return ID .ID (LIT )\n"
    },
    {
        "code": "\ndef iterate_records(self, zone):\n    return self._get_more('records', zone=zone)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 50,
            "fix_type": "modify",
            "fix_token": ")",
            "id": 17465
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    return ID .ID (LIT ,ID =ID )\n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    return ID .ID (LIT ,ID =ID pass \n"
    },
    {
        "code": "\ndef get_zone(self, zone_id):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 17,
            "fix_type": "insert",
            "fix_token": ":",
            "id": 17466
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID )\n    pass \n"
    },
    {
        "code": "\ndef get_record(self, zone_id, record_id):\n    if name:\n        pass\n    else:\n        pass\n    if record.name != name or record.type != record_type_num:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 33,
            "fix_type": "delete",
            "id": 17467
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ):\n    if ID :\n        pass \n    else :\n        pass \n    if ID .ID !=ID or ID .ID !=ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ):\n    if ID not :\n        pass \n    else :\n        pass \n    if ID .ID !=ID or ID .ID !=ID :\n        pass \n"
    },
    {
        "code": "\ndef create_zone(self, domain, type='master', ttl=None, extra=None):\n\n    if extra and 'Comment' in extra:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 1,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17468
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =LIT ,ID =ID ,ID =ID ):\n\n    if ID and LIT in ID :\n        pass \n",
        "wrong_code": "\nasync ID (ID ,ID ,ID =LIT ,ID =ID ,ID =ID ):\n\n    if ID and LIT in ID :\n        pass \n"
    },
    {
        "code": "\ndef delete_zone(self, zone, ex_delete_records=False):\n\n    if ex_delete_records:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 49,
            "fix_type": "modify",
            "fix_token": "pass",
            "id": 17469
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =LIT ):\n\n    if ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID =LIT ):\n\n    if ID :\n        from \n"
    },
    {
        "code": "\ndef create_record(self, name, zone, type, data, extra=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 17,
            "fix_type": "delete",
            "id": 17470
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,==ID ,ID ,ID ,ID =ID ):\n    pass \n"
    },
    {
        "code": "\ndef delete_record(self, record):\n    try:\n        pass\n    except InvalidChangeBatch:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 9,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17471
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    try :\n        pass \n    except ID :\n        pass \n",
        "wrong_code": "\ndef ID (or ,ID ):\n    try :\n        pass \n    except ID :\n        pass \n"
    },
    {
        "code": "\ndef ex_create_multi_value_record(self, name, zone, type, data, extra=None):\n\n    for value in values:\n        pass\n    for value in values:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 81,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17472
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID =ID ):\n\n    for ID in ID :\n        pass \n    for ID in ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ,ID =ID ):\n\n    for ID in ID :\n        pass \n    for in ID :\n        pass \n"
    },
    {
        "code": "\ndef _update_single_value_record(self, record, name=None, type=None,\n                                data=None, extra=None):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 46,
            "fix_type": "delete",
            "id": 17473
        },
        "correct_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ,\nID =ID ,ID =ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID =ID ,ID =ID ,\nID =ID ,ID =None ID ):\n    pass \n"
    },
    {
        "code": "\ndef _to_zones(self, data):\n    for element in data.findall(fixxpath(xpath='HostedZones/HostedZone',\n                                         namespace=NAMESPACE)):\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 49,
            "fix_type": "delete",
            "id": 17474
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    for ID in ID .ID (ID (ID =LIT ,\n    ID =ID )):\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ):\n    for ID in ID .ID (ID (ID =global LIT ,\n    ID =ID )):\n        pass \n"
    },
    {
        "code": "\ndef _to_zone(self, elem):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 9,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17475
        },
        "correct_code": "\ndef ID (ID ,ID ):\n    pass \n",
        "wrong_code": "\ndef ID (,ID ):\n    pass \n"
    },
    {
        "code": "\ndef _get_more(self, rtype, **kwargs):\n    while not exhausted:\n        for item in items:\n            pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/dns/drivers/route53.py",
            "fix_location": 89,
            "fix_type": "delete",
            "id": 17476
        },
        "correct_code": "\ndef ID (ID ,ID ,**ID ):\n    while not ID :\n        for ID in ID :\n            pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,**ID ):\n    while not ID :\n        for ID in ID :\n            pass \n    while "
    },
    {
        "code": "\ndef _get_method_name(self, type, use_param, qs, path):\n    return \"_xmlrpc\"\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/common/test_gandi.py",
            "fix_location": 35,
            "fix_type": "modify",
            "fix_token": "return",
            "id": 17477
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return LIT \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    lambda LIT \n"
    },
    {
        "code": "\ndef _xmlrpc(self, method, url, body, headers):\n    if self.type:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/common/test_gandi.py",
            "fix_location": 21,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17478
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    if ID .ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,,ID ):\n    if ID .ID :\n        pass \n"
    },
    {
        "code": "\ndef setUp(self):\n    GoGridNodeDriver.connectionCls.conn_classes = (None, GoGridMockHttp)\n    GoGridMockHttp.type = None\n    self.driver = GoGridNodeDriver(\"foo\", \"bar\")\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 0,
            "fix_type": "delete",
            "id": 17479
        },
        "correct_code": "\ndef ID (ID ):\n    ID .ID .ID =(ID ,ID )\n    ID .ID =ID \n    ID .ID =ID (LIT ,LIT )\n",
        "wrong_code": "-\ndef ID (ID ):\n    ID .ID .ID =(ID ,ID )\n    ID .ID =ID \n    ID .ID =ID (LIT ,LIT )\n"
    },
    {
        "code": "\ndef _get_test_512Mb_node_size(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 12,
            "fix_type": "insert",
            "fix_token": ")",
            "id": 17480
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID :\n    pass \n"
    },
    {
        "code": "\ndef test_create_node(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 24,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17481
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ):\n    pass async "
    },
    {
        "code": "\ndef test_list_nodes(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 8,
            "fix_type": "modify",
            "fix_token": "(",
            "id": 17482
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID while ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_reboot_node(self):\n    node = Node(90967, None, None, None, None, self.driver)\n    ret = self.driver.reboot_node(node)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 94,
            "fix_type": "delete",
            "id": 17483
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID (LIT ,ID ,ID ,ID ,ID ,ID .ID )\n    ID =ID .ID .ID (ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID (LIT ,ID ,ID ,ID ,ID ,ID .ID )\n    ID =ID .ID .ID (ID )\n    ID .ID (elif ID )\n"
    },
    {
        "code": "\ndef test_reboot_node_not_successful(self):\n\n    try:\n        pass\n    except Exception:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 0,
            "fix_type": "modify",
            "fix_token": "\n",
            "id": 17484
        },
        "correct_code": "\ndef ID (ID ):\n\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "-def ID (ID ):\n\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass \n"
    },
    {
        "code": "\ndef test_destroy_node(self):\n    node = Node(90967, None, None, None, None, self.driver)\n    ret = self.driver.destroy_node(node)\n    self.assertTrue(ret)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 47,
            "fix_type": "delete",
            "id": 17485
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID (LIT ,ID ,ID ,ID ,ID ,ID .ID )\n    ID =ID .ID .ID (ID )\n    ID .ID (ID )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID (LIT ,ID ,ID ,ID ,ID None ,ID .ID )\n    ID =ID .ID .ID (ID )\n    ID .ID (ID )\n"
    },
    {
        "code": "\ndef test_list_images(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 12,
            "fix_type": "delete",
            "id": 17486
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID LIT ):\n    pass \n"
    },
    {
        "code": "\ndef test_malformed_reply(self):\n    try:\n        pass\n    except LibcloudError:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 88,
            "fix_type": "modify",
            "fix_token": "pass",
            "id": 17487
        },
        "correct_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        for \n"
    },
    {
        "code": "\ndef test_invalid_creds(self):\n    try:\n        pass\n    except InvalidCredsError:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 77,
            "fix_type": "insert",
            "fix_token": "",
            "id": 17488
        },
        "correct_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n        else :\n        pass \n    "
    },
    {
        "code": "\ndef test_node_creation_without_free_public_ips(self):\n    try:\n        pass\n    except LibcloudError:\n        pass\n    else:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 93,
            "fix_type": "delete",
            "id": 17489
        },
        "correct_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    try :\n        pass \n    except ID :\n        pass \n    else :\n        pass =\n"
    },
    {
        "code": "\ndef test_list_locations(self):\n    for i in 0, 1:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 34,
            "fix_type": "delete",
            "id": 17490
        },
        "correct_code": "\ndef ID (ID ):\n    for ID in LIT ,LIT :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n    for ID in LIT ,*LIT :\n        pass \n"
    },
    {
        "code": "\ndef test_ex_save_image(self):\n    node = self.driver.list_nodes()[0]\n    image = self.driver.ex_save_image(node, \"testimage\")\n    self.assertEqual(image.name, \"testimage\")\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 37,
            "fix_type": "insert",
            "fix_token": "LIT",
            "id": 17491
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID .ID ()[LIT ]\n    ID =ID .ID .ID (ID ,LIT )\n    ID .ID (ID .ID ,LIT )\n",
        "wrong_code": "\ndef ID (ID ):\n    ID =ID .ID .ID ()[]\n    ID =ID .ID .ID (ID ,LIT )\n    ID .ID (ID .ID ,LIT )\n"
    },
    {
        "code": "\ndef test_ex_edit_image(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 19,
            "fix_type": "delete",
            "id": 17492
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ID (ID ):\n    !pass \n"
    },
    {
        "code": "\ndef test_ex_edit_node(self):\n    pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 5,
            "fix_type": "modify",
            "fix_token": "ID",
            "id": 17493
        },
        "correct_code": "\ndef ID (ID ):\n    pass \n",
        "wrong_code": "\ndef ((ID ):\n    pass \n"
    },
    {
        "code": "\ndef test_ex_list_ips(self):\n\n    for ip in ips:\n        pass\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 20,
            "fix_type": "modify",
            "fix_token": "for",
            "id": 17494
        },
        "correct_code": "\ndef ID (ID ):\n\n    for ID in ID :\n        pass \n",
        "wrong_code": "\ndef ID (ID ):\n\n    async ID in ID :\n        pass \n"
    },
    {
        "code": "\ndef test_get_state_invalid(self):\n    state = self.driver._get_state('invalid')\n    self.assertEqual(state, NodeState.UNKNOWN)\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 1,
            "fix_type": "modify",
            "fix_token": "def",
            "id": 17495
        },
        "correct_code": "\ndef ID (ID ):\n    ID =ID .ID .ID (LIT )\n    ID .ID (ID ,ID .ID )\n",
        "wrong_code": "\nbreak ID (ID ):\n    ID =ID .ID .ID (LIT )\n    ID .ID (ID ,ID .ID )\n"
    },
    {
        "code": "\ndef _api_grid_image_list(self, method, url, body, headers):\n    return (httplib.OK, body, {}, httplib.responses[httplib.OK])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 17,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17496
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,ID ,{},ID .ID [ID .ID ])\n",
        "wrong_code": "\ndef ID (ID ,ID ,,ID ,ID ):\n    return (ID .ID ,ID ,{},ID .ID [ID .ID ])\n"
    },
    {
        "code": "\ndef _api_grid_image_list_FAIL(self, method, url, body, headers):\n    body = \"<h3>some non valid json here</h3>\"\n    return (httplib.SERVICE_UNAVAILABLE, body, {},\n            httplib.responses[httplib.SERVICE_UNAVAILABLE])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 69,
            "fix_type": "delete",
            "id": 17497
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    ID =LIT \n    return (ID .ID ,ID ,{},\n    ID .ID [ID .ID ])\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    ID =LIT \n    return (ID .ID ,ID ,{try },\n    ID .ID [ID .ID ])\n"
    },
    {
        "code": "\ndef _api_grid_server_list(self, method, url, body, headers):\n    return (httplib.OK, body, {}, httplib.responses[httplib.OK])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 9,
            "fix_type": "delete",
            "id": 17498
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,ID ,{},ID .ID [ID .ID ])\n",
        "wrong_code": "\ndef ID (:ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,ID ,{},ID .ID [ID .ID ])\n"
    },
    {
        "code": "\ndef _api_grid_server_list_FAIL(self, method, url, body, headers):\n    return (httplib.FORBIDDEN,\n            \"123\", {}, httplib.responses[httplib.FORBIDDEN])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 9,
            "fix_type": "insert",
            "fix_token": "ID",
            "id": 17499
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,\n    LIT ,{},ID .ID [ID .ID ])\n",
        "wrong_code": "\ndef ID (,ID ,ID ,ID ,ID ):\n    return (ID .ID ,\n    LIT ,{},ID .ID [ID .ID ])\n"
    },
    {
        "code": "\ndef _api_grid_ip_list(self, method, url, body, headers):\n    return (httplib.OK, body, {}, httplib.responses[httplib.OK])\n",
        "metadata": {
            "file": "py150_files/data/apache/libcloud/libcloud/test/compute/test_gogrid.py",
            "fix_location": 54,
            "fix_type": "modify",
            "fix_token": ",",
            "id": 17500
        },
        "correct_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,ID ,{},ID .ID [ID .ID ])\n",
        "wrong_code": "\ndef ID (ID ,ID ,ID ,ID ,ID ):\n    return (ID .ID ,ID pass {},ID .ID [ID .ID ])\n"
    }
]